<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据库SQL命令</title>
      <link href="2021/03/01/shu-ju-ku-sql-ming-ling/"/>
      <url>2021/03/01/shu-ju-ku-sql-ming-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="SQL（Structured-Query-Language）"><a href="#SQL（Structured-Query-Language）" class="headerlink" title="SQL（Structured Query Language）"></a>SQL（Structured Query Language）</h2><p>结构化查询语言，是关系数据库的标准语言</p><h4 id="SQL-的动词"><a href="#SQL-的动词" class="headerlink" title="SQL 的动词"></a>SQL 的动词</h4><div class="table-container"><table><thead><tr><th>SQL功能</th><th>动词</th></tr></thead><tbody><tr><td>数据查询</td><td>Select</td></tr><tr><td>数据定义</td><td>Create,Drop,Alter</td></tr><tr><td>数据操纵</td><td>Insert, Update, Delete</td></tr><tr><td>数据控制</td><td>Grant, Revoke</td></tr></tbody></table></div><h4 id="SQL-的数据定义语句"><a href="#SQL-的数据定义语句" class="headerlink" title="SQL 的数据定义语句"></a>SQL 的数据定义语句</h4><div class="table-container"><table><thead><tr><th>操作对象</th><th>创建</th><th>删除</th><th>修改</th></tr></thead><tbody><tr><td>模式</td><td>Create Schema</td><td>Drop Schema</td><td></td></tr><tr><td>表</td><td>Create Table</td><td>Drop Table</td><td>Alter Table</td></tr><tr><td>视图</td><td>Create View</td><td>Drop View</td><td></td></tr><tr><td>索引</td><td>Create Index</td><td>Drop Index</td><td>Alter Index</td></tr></tbody></table></div><h3 id="定义模式"><a href="#定义模式" class="headerlink" title="定义模式"></a>定义模式</h3><p><strong>CREATE SCHEMA</strong> [&lt;模式名&gt;] <strong>AUTHORIZATION</strong> &lt;用户名&gt;[&lt;表定义子句&gt;|&lt;视图定义子句&gt;|&lt;授权定义子句&gt;]</p><p>CREATE SCHEMA “S-T” AUTHORIZATION WANG;</p><p>其中，模式名可隐藏，默认为&lt;用户名&gt;</p>]]></content>
      
      
      <categories>
          
          <category> UNSW </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 课程 </tag>
            
            <tag> COMP9311 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>COMP9311课程笔记（Week2）</title>
      <link href="2021/02/28/comp9311-ke-cheng-bi-ji-week2/"/>
      <url>2021/02/28/comp9311-ke-cheng-bi-ji-week2/</url>
      
        <content type="html"><![CDATA[<h2 id="关系代数"><a href="#关系代数" class="headerlink" title="关系代数"></a>关系代数</h2><h4 id="关系数据库语言的分类"><a href="#关系数据库语言的分类" class="headerlink" title="关系数据库语言的分类"></a>关系数据库语言的分类</h4><p><strong>关系代数语言</strong>：用对关系的运算来表达查询要求</p><p><strong>关系演算语言</strong>：用谓词来表达查询要求</p><ul><li>元组关系演算语言<br>谓词变元的基本对象是元组变量<br>代表：APLHA, QUEL</li><li>域关系演算语言<br>谓词变元的基本对象是域变量<br>代表：QBE</li></ul><p><strong>具有关系代数和关系演算双重特点的语言</strong><br>代表：SQL（Structured Query Language）</p><h2 id="关系代数-1"><a href="#关系代数-1" class="headerlink" title="关系代数"></a>关系代数</h2><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>关系代数是一种抽象的查询语言，它用对关系的运算来表达查询</p><h4 id="关系代数的特点"><a href="#关系代数的特点" class="headerlink" title="关系代数的特点"></a>关系代数的特点</h4><ul><li>运算对象是关系</li><li>运算结果亦为关系</li><li>关系代数的运算符有两类：集合运算符和专门的关系运算符</li></ul><div class="table-container"><table><thead><tr><th></th><th>运算符</th><th>含义</th></tr></thead><tbody><tr><td>集合运算符</td><td>$\cup $</td><td>并</td></tr><tr><td></td><td>$- $</td><td>差</td></tr><tr><td></td><td>$\cap $</td><td>交</td></tr><tr><td></td><td>$\times$</td><td>笛卡尔积</td></tr><tr><td>专门的关系运算符</td><td>$\sigma$</td><td>选择</td></tr><tr><td></td><td>$ \pi$</td><td>投影</td></tr><tr><td></td><td>$\Join$</td><td>连接</td></tr><tr><td></td><td>$\div$</td><td>除</td></tr></tbody></table></div><h3 id="传统的集合运算"><a href="#传统的集合运算" class="headerlink" title="传统的集合运算"></a>传统的集合运算</h3><h3 id="一些基本概念"><a href="#一些基本概念" class="headerlink" title="一些基本概念"></a>一些基本概念</h3><h4 id="（1）-R-t-in-R-t-A-i"><a href="#（1）-R-t-in-R-t-A-i" class="headerlink" title="（1）$R,t\in R,t[A_i]$"></a>（1）$R,t\in R,t[A_i]$</h4><p>设关系模式为$R(A_1,A_2,\dots , A_n)$<br>它的一个关系设为$R$<br>$t \in R $表示$t$是$R$的一个元组<br>$t[A_i]$则表示元组$t$中相应于属性$A_i$的一个分量</p><h4 id="（2）-A-t-A-bar-A"><a href="#（2）-A-t-A-bar-A" class="headerlink" title="（2）$A,t[A], \bar{A}$"></a>（2）$A,t[A], \bar{A}$</h4><p>若$A={A_{i1}, A_{i2}, \dots, A_{ik}}$ ，其中$A_{i1}, A_{i2}, \dots, A_{ik}$ 是$A_{1}, A_{2}, \dots, A_{n}$ 中的一部分，则$A$称为属性列或属性组。<br>$t[A]=(t[A_{i1}],t[A_{i2}],\dots,t[A_{ik}])$表示元组$t$在属性列$A$上诸分量的集合。<br>$\bar{A}$则表示${A_{1}, A_{2}, \dots, A_{n}}$中去掉${A_{i1}, A_{i2}, \dots, A_{ik}}$后剩余的属性组。</p><h4 id="3-overset-frown-t-rt-s"><a href="#3-overset-frown-t-rt-s" class="headerlink" title="(3)$\overset{\frown}{t_rt_s}$"></a>(3)$\overset{\frown}{t_rt_s}$</h4><p>$R$为$n$目关系，$S$为$m$目关系。<br>$t_r\in R,t_s \in S, \overset{\frown}{t_rt_s}$称为元组的连接。<br>$\overset{\frown}{t_rt_s}$是一个$n+m$列的元组，前$n$个分量为$R$中的一个$n$元组，后$m$个分量为$S$中的一个$m$元组。</p><h4 id="4-象集-Z-x"><a href="#4-象集-Z-x" class="headerlink" title="(4)象集$Z_x$"></a>(4)象集$Z_x$</h4><p>给定一个关系$R（X，Z），X$和$Z$为属性组。 当$t[X]=x$时，$x$在$R$中的象集（Images Set）为：<br>$Zx={t[Z]|,t ∈R,t[X]=x}$<br>它表示$R$中属性组$X$上值为$x$的诸元组在$Z$上分量的集合</p><h3 id="1-并（Union）"><a href="#1-并（Union）" class="headerlink" title="1. 并（Union）"></a>1. 并（Union）</h3><ul><li>$R$和$S$ 具有相同的目$n$（即两个关系都有$n$个属性） </li><li>相应的属性取自同一个域<br>$R\cup S$ 仍为$n$目关系，由属于$R$或属于$S$的元组组成<br>$R\cup S =  \{ t|t ∈ R\lor t \in S\}$</li></ul><h3 id="2-差（Difference）"><a href="#2-差（Difference）" class="headerlink" title="2. 差（Difference）"></a>2. 差（Difference）</h3><ul><li>$R$和$S$ 具有相同的目$n$ </li><li>相应的属性取自同一个域<br>$R - S $ 仍为$n$目关系，由属于$R$而不属于$S$的所有元组组成<br>$R -S = \{ t|t∈R∧t∉S \}$</li></ul><h3 id="3-交（Intersection）"><a href="#3-交（Intersection）" class="headerlink" title="3.交（Intersection）"></a>3.交（Intersection）</h3><ul><li>$R$和$S$具有相同的目$n$</li><li>相应的属性取自同一个域</li><li>$R∩S$ 仍为$n$目关系，由既属于$R$又属于$S$的元组组成</li><li>$R∩S = \{ t|t ∈ R∧t ∈S \}\\ R∩S = R –(R-S）$</li></ul><h3 id="4-笛卡尔积（Cartesian-Product）"><a href="#4-笛卡尔积（Cartesian-Product）" class="headerlink" title="4.笛卡尔积（Cartesian Product）"></a>4.笛卡尔积（Cartesian Product）</h3><ul><li><p>$R: n$目关系，$k_1$个元组； $S: m$目关系，$k_2$个元组<br>对于$R×S$，有</p></li><li><p>列：$（n+m）$列元组的集合<br>元组的前$n$列是关系$R$的一个元组<br>后$m$列是关系$S$的一个元组</p></li><li><p>行：$k_1×k_2$个元组<br>$R×S = \{\overset{\frown}{t_rt_s}|t_r ∈R ∧ t_s∈S \}$</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> UNSW </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 课程 </tag>
            
            <tag> COMP9311 </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3教程笔记（一）</title>
      <link href="2021/02/26/python3-jiao-cheng-bi-ji/"/>
      <url>2021/02/26/python3-jiao-cheng-bi-ji/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文根据<a href="https://www.runoob.com/python3">菜鸟教程</a>整理</p></blockquote><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h3><h4 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h4><ul><li>默认编码：UTF-8</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"># -*- coding: cp-1252 -*-<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="标示符"><a href="#标示符" class="headerlink" title="标示符"></a>标示符</h4><p>需要符合以下正则表达式： [_A-Za-z]+[_A-Za-z0-9]* （变量名也支持中文）</p><h4 id="python保留字"><a href="#python保留字" class="headerlink" title="python保留字"></a>python保留字</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">&gt;&gt;&gt; import keyword&gt;&gt;&gt; keyword.kwlist['False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>单行注释 <strong>#</strong>，多行注释 <strong>‘’’</strong>和 <strong>“””</strong></p><h4 id="行与缩进"><a href="#行与缩进" class="headerlink" title="行与缩进"></a>行与缩进</h4><p>python使用行与缩进表示代码块，不使用{}等符号</p><h4 id="多行语句"><a href="#多行语句" class="headerlink" title="多行语句"></a>多行语句</h4><p>使用== \\==实现多行语句</p><ul><li>在 [], {}, 或 () 中，不需要使用多行语句</li></ul><h4 id="数字-Number-类型"><a href="#数字-Number-类型" class="headerlink" title="数字(Number)类型"></a>数字(Number)类型</h4><p>整数int、布尔型bool、浮点数float和复数complex</p><h4 id="字符串-String"><a href="#字符串-String" class="headerlink" title="字符串(String)"></a>字符串(String)</h4><ul><li><p>单引号’’及双引号””语义完全相同</p></li><li><p>使用三引号定义多行字符串</p></li><li><p>转义字符为<strong>\\</strong></p></li><li><p>使用<strong>r’内容’</strong>，使字符串中的内容不转义</p></li><li><p>使用<strong>+</strong>号拼接，使用<strong>*</strong>号重复</p></li><li><p>索引左侧数从0开始，右侧数从-1开始</p></li><li>没有单独的字符类型</li><li>字符串截取：<strong>变量[头下标:尾下标:步长]</strong></li></ul><h4 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h4><p>用于分割函数或类，不是Python语法，仅用于便于日后维护</p><h4 id="等待用户输入"><a href="#等待用户输入" class="headerlink" title="等待用户输入"></a>等待用户输入</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">#!/usr/bin/python3input("\n\n按下 enter 键后退出。")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="同一行显示多条语句"><a href="#同一行显示多条语句" class="headerlink" title="同一行显示多条语句"></a>同一行显示多条语句</h4><p>语句见使用<strong>;</strong>分割</p><h4 id="多个语句构成代码组"><a href="#多个语句构成代码组" class="headerlink" title="多个语句构成代码组"></a>多个语句构成代码组</h4><p>即缩进相同的一组语句构成一个代码块</p><h4 id="print-输出"><a href="#print-输出" class="headerlink" title="print 输出"></a>print 输出</h4><ul><li>print 默认输出后换行</li></ul><p>不换行需要在尾部加上 <strong>end=””</strong></p><h4 id="import-与-from…import"><a href="#import-与-from…import" class="headerlink" title="import 与 from…import"></a>import 与 from…import</h4><ul><li><p>导入整个模块：<strong>import somemodule</strong></p></li><li><p>从模块中导入函数： <strong>from somemodule import firstfunc, secondfunc, thirdfunc</strong></p></li><li><p>导入模块中的全部函数： <strong>from somemodule import *</strong></p></li></ul><h4 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h4><p>可使用python -h命令查看python帮助</p><h3 id="Python3-基本数据类型"><a href="#Python3-基本数据类型" class="headerlink" title="Python3 基本数据类型"></a>Python3 基本数据类型</h3><h4 id="变量声明及赋值"><a href="#变量声明及赋值" class="headerlink" title="变量声明及赋值"></a>变量声明及赋值</h4><ul><li>定义变量时不需要声明类型</li><li>使用<strong>=</strong>给变量赋值</li><li>使用del删除变量</li></ul><h4 id="多个变量赋值"><a href="#多个变量赋值" class="headerlink" title="多个变量赋值"></a>多个变量赋值</h4><p>允许同时为多个变量赋值，格式为</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a = b = c = 1# a,b,c均赋值为1a, b, c = 1, 2, "runoob"# a,b,c分别赋值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="标准数据类型"><a href="#标准数据类型" class="headerlink" title="标准数据类型"></a>标准数据类型</h4><ul><li><p>Number（数字）</p></li><li><p>String（字符串）</p></li><li><p>List（列表）</p></li><li><p>Tuple（元组）</p></li><li><p>Set（集合）</p></li><li><p>Dictionary（字典）</p></li></ul><p><strong>不可变数据（3 个）：</strong>Number（数字）、String（字符串）、Tuple（元组）</p><p><strong>可变数据（3 个）：</strong>List（列表）、Dictionary（字典）、Set（集合）</p><h4 id="Number（数字）"><a href="#Number（数字）" class="headerlink" title="Number（数字）"></a>Number（数字）</h4><p>支持 <strong>int、float、bool、complex（复数）</strong></p><ul><li>Python3 没有Long，Python2有Long类型</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">type(a)# 查询对象类型，不会认为子类是一种父类类型isinstance(a, int) # 判断对象是否为指定类型，认为子类是一种父类类型<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="基本数学运算"><a href="#基本数学运算" class="headerlink" title="基本数学运算"></a>基本数学运算</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python">&gt;&gt;&gt; 5 + 4  # 加法&gt;&gt;&gt; 4.3 - 2 # 减法&gt;&gt;&gt; 3 * 7  # 乘法&gt;&gt;&gt; 2 / 4  # 除法，得到一个浮点数&gt;&gt;&gt; 2 // 4 # 除法，得到一个整数&gt;&gt;&gt; 17 % 3 # 取余 &gt;&gt;&gt; 2 ** 5 # 乘方<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="String（字符串）"><a href="#String（字符串）" class="headerlink" title="String（字符串）"></a>String（字符串）</h4><ul><li>使用’’或“”定义，或使用 <strong>“””…”””</strong>  <strong>‘’’…’’’</strong> 跨越多行定义</li><li>使用\转义</li><li><p>截取字符串方法 变量名[头下标:尾下标]</p></li><li><p>使用+连接字符串，使用*重复字符串</p></li><li><p>使用r’’定义原始不转义字符串</p></li><li><p>索引从左往右以0开始，从右往左以-1开始</p></li></ul><h4 id="List（列表）"><a href="#List（列表）" class="headerlink" title="List（列表）"></a>List（列表）</h4><ul><li><p>使用<strong>[]</strong>符号定义，元素间使用<strong>,</strong>符号分割</p></li><li><p>列表中的数据类型可以不相同</p></li><li><p>可以被截取，截取方式为：<strong>变量名[头下标:尾下标]</strong> 或 <strong>变量名[头下标:尾下标:步长]</strong></p></li><li><p>可以被索引和切片，索引值以 <strong>0</strong> 为开始值，<strong>-1</strong> 为从末尾的开始位置</p></li><li><p>加号 <strong>+</strong> 是列表连接运算符，星号 <strong>*</strong> 是重复操作</p></li><li><p>列表中的元素可以改变</p></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">a[0] = 9# 改变列表单个值a[2:5] = [13, 14, 15]# 改变列表多个值a[2:4] = []# 删除列表中的指定项数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="Tuple（元组）"><a href="#Tuple（元组）" class="headerlink" title="Tuple（元组）"></a>Tuple（元组）</h4><ul><li>使用<strong>()</strong>符号定义，元素之间用逗号隔开</li><li>元组的元素不能修改</li><li>可以被索引且下标索引从0开始，-1 为从末尾开始的位置</li><li><p>可以被截取，截取方式为：<strong>变量名[头下标:尾下标]</strong> 或 <strong>变量名[头下标:尾下标:步长]</strong></p></li><li><p>元组的元素可以是可变的对象，比如list列表</p></li><li><p>string、list 和 tuple 都属于 sequence（序列）</p></li></ul><h4 id="Set（集合）"><a href="#Set（集合）" class="headerlink" title="Set（集合）"></a>Set（集合）</h4><ul><li>使用大括号 <strong>{ }</strong> 或者 <strong>set()</strong> 函数创建集合</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"># 集合的运算a - b     # a 和 b 的差集a | b     # a 和 b 的并集a &amp; b     # a 和 b 的交集a ^ b     # a 和 b 中不同时存在的元素<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Dictionary（字典）"><a href="#Dictionary（字典）" class="headerlink" title="Dictionary（字典）"></a>Dictionary（字典）</h4><ul><li><p>使用 <strong>{ }</strong> 标识，它是一个无序的 <strong>键(key) : 值(value)</strong> 的集合</p></li><li><p>列表是有序的对象集合，字典是无序的对象集合</p></li><li>键(key)必须使用不可变类型</li><li>在同一个字典中，键(key)必须是唯一的，不能重复</li><li>字典类型也有一些内置的函数，例如clear()、keys()、values()</li><li>创建空字典使用 <strong>{ }</strong></li><li>字典是一种映射类型，它的元素是键值对</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"># 字典的基本使用方法dict['one']       # 输出键为 'one' 的值dict[2]           # 输出键为 2 的值print (tinydict)          # 输出完整的字典到控制台tinydict.keys()   # 输出所有键tinydict.values() # 输出所有值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"># 构造函数 dict() 可以直接从键值对序列中构建字典dict([('Runoob', 1), ('Google', 2), ('Taobao', 3)]){x: x**2 for x in (2, 4, 6)}dict(Runoob=1, Google=2, Taobao=3)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Python数据类型转换"><a href="#Python数据类型转换" class="headerlink" title="Python数据类型转换"></a>Python数据类型转换</h4><div class="table-container"><table><thead><tr><th style="text-align:left">函数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python-func-int.html">int(x [,base])</a></td><td style="text-align:left">将x转换为一个整数</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python-func-float.html">float(x)</a></td><td style="text-align:left">将x转换到一个浮点数</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python-func-complex.html">complex(real [,imag])</a></td><td style="text-align:left">创建一个复数</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python-func-str.html">str(x)</a></td><td style="text-align:left">将对象 x 转换为字符串</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python-func-repr.html">repr(x)</a></td><td style="text-align:left">将对象 x 转换为表达式字符串</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python-func-eval.html">eval(str)</a></td><td style="text-align:left">用来计算在字符串中的有效Python表达式,并返回一个对象</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-tuple.html">tuple(s)</a></td><td style="text-align:left">将序列 s 转换为一个元组</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-list.html">list(s)</a></td><td style="text-align:left">将序列 s 转换为一个列表</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python-func-set.html">set(s)</a></td><td style="text-align:left">转换为可变集合</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python-func-dict.html">dict(d)</a></td><td style="text-align:left">创建一个字典。d 必须是一个 (key, value)元组序列。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python-func-frozenset.html">frozenset(s)</a></td><td style="text-align:left">转换为不可变集合</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python-func-chr.html">chr(x)</a></td><td style="text-align:left">将一个整数转换为一个字符</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python-func-ord.html">ord(x)</a></td><td style="text-align:left">将一个字符转换为它的整数值</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python-func-hex.html">hex(x)</a></td><td style="text-align:left">将一个整数转换为一个十六进制字符串</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python-func-oct.html">oct(x)</a></td><td style="text-align:left">将一个整数转换为一个八进制字符串</td></tr></tbody></table></div><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><h4 id="Python算术运算符"><a href="#Python算术运算符" class="headerlink" title="Python算术运算符"></a>Python算术运算符</h4><div class="table-container"><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">+</td><td style="text-align:left">加 - 两个对象相加</td><td style="text-align:left">a + b 输出结果 31</td></tr><tr><td style="text-align:left">-</td><td style="text-align:left">减 - 得到负数或是一个数减去另一个数</td><td style="text-align:left">a - b 输出结果 -11</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">乘 - 两个数相乘或是返回一个被重复若干次的字符串</td><td style="text-align:left">a * b 输出结果 210</td></tr><tr><td style="text-align:left">/</td><td style="text-align:left">除 - x 除以 y</td><td style="text-align:left">b / a 输出结果 2.1</td></tr><tr><td style="text-align:left">%</td><td style="text-align:left">取模 - 返回除法的余数</td><td style="text-align:left">b % a 输出结果 1</td></tr><tr><td style="text-align:left">**</td><td style="text-align:left">幂 - 返回x的y次幂</td><td style="text-align:left">a**b 为10的21次方</td></tr><tr><td style="text-align:left">//</td><td style="text-align:left">取整除 - 向下取接近商的整数</td><td style="text-align:left"><code>&gt;&gt;&gt; 9//2 # 4</code><br><code>&gt;&gt;&gt; -9//2 # -5</code></td></tr></tbody></table></div><h4 id="Python比较运算符"><a href="#Python比较运算符" class="headerlink" title="Python比较运算符"></a>Python比较运算符</h4><div class="table-container"><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">==</td><td style="text-align:left">等于 - 比较对象是否相等</td><td style="text-align:left">(a == b) 返回 False。</td></tr><tr><td style="text-align:left">!=</td><td style="text-align:left">不等于 - 比较两个对象是否不相等</td><td style="text-align:left">(a != b) 返回 True。</td></tr><tr><td style="text-align:left">&gt;</td><td style="text-align:left">大于 - 返回x是否大于y</td><td style="text-align:left">(a &gt; b) 返回 False。</td></tr><tr><td style="text-align:left">&lt;</td><td style="text-align:left">小于 - 返回x是否小于y。所有比较运算符返回1表示真，返回0表示假。这分别与特殊的变量True和False等价。注意，这些变量名的大写。</td><td style="text-align:left">(a &lt; b) 返回 True。</td></tr><tr><td style="text-align:left">&gt;=</td><td style="text-align:left">大于等于 - 返回x是否大于等于y。</td><td style="text-align:left">(a &gt;= b) 返回 False。</td></tr><tr><td style="text-align:left">&lt;=</td><td style="text-align:left">小于等于 - 返回x是否小于等于y。</td><td style="text-align:left">(a &lt;= b) 返回 True。</td></tr></tbody></table></div><h4 id="Python赋值运算符"><a href="#Python赋值运算符" class="headerlink" title="Python赋值运算符"></a>Python赋值运算符</h4><div class="table-container"><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">=</td><td style="text-align:left">简单的赋值运算符</td><td style="text-align:left">c = a + b 将 a + b 的运算结果赋值为 c</td></tr><tr><td style="text-align:left">+=</td><td style="text-align:left">加法赋值运算符</td><td style="text-align:left">c += a 等效于 c = c + a</td></tr><tr><td style="text-align:left">-=</td><td style="text-align:left">减法赋值运算符</td><td style="text-align:left">c -= a 等效于 c = c - a</td></tr><tr><td style="text-align:left">*=</td><td style="text-align:left">乘法赋值运算符</td><td style="text-align:left">c <em>= a 等效于 c = c </em> a</td></tr><tr><td style="text-align:left">/=</td><td style="text-align:left">除法赋值运算符</td><td style="text-align:left">c /= a 等效于 c = c / a</td></tr><tr><td style="text-align:left">%=</td><td style="text-align:left">取模赋值运算符</td><td style="text-align:left">c %= a 等效于 c = c % a</td></tr><tr><td style="text-align:left">**=</td><td style="text-align:left">幂赋值运算符</td><td style="text-align:left">c <strong>= a 等效于 c = c </strong> a</td></tr><tr><td style="text-align:left">//=</td><td style="text-align:left">取整除赋值运算符</td><td style="text-align:left">c //= a 等效于 c = c // a</td></tr><tr><td style="text-align:left">:=</td><td style="text-align:left">海象运算符，可在表达式内部为变量赋值。<strong>Python3.8 版本新增运算符</strong>。</td><td style="text-align:left">在这个示例中，赋值表达式可以避免调用 len() 两次:<br><code>if (n := len(a)) &gt; 10:    print(f"List is too long ({n} elements, expected &lt;= 10)")</code></td></tr></tbody></table></div><h4 id="Python位运算符"><a href="#Python位运算符" class="headerlink" title="Python位运算符"></a>Python位运算符</h4><div class="table-container"><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">&amp;</td><td style="text-align:left">按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0</td><td style="text-align:left">(a &amp; b) 输出结果 12 ，二进制解释： 0000 1100</td></tr><tr><td style="text-align:left">$#124;</td><td style="text-align:left">按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。</td><td style="text-align:left">(a \</td><td>b) 输出结果 61 ，二进制解释： 0011 1101</td></tr><tr><td style="text-align:left">^</td><td style="text-align:left">按位异或运算符：当两对应的二进位相异时，结果为1</td><td style="text-align:left">(a ^ b) 输出结果 49 ，二进制解释： 0011 0001</td></tr><tr><td style="text-align:left">~</td><td style="text-align:left">按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1。<strong>~x</strong>类似于 <strong>-x-1</strong></td><td style="text-align:left">(~a ) 输出结果 -61 ，二进制解释： 1100 0011， 在一个有符号二进制数的补码形式。</td></tr><tr><td style="text-align:left">&lt;&lt;</td><td style="text-align:left">左移动运算符：运算数的各二进位全部左移若干位，由”&lt;&lt;”右边的数指定移动的位数，高位丢弃，低位补0。</td><td style="text-align:left">a &lt;&lt; 2 输出结果 240 ，二进制解释： 1111 0000</td></tr><tr><td style="text-align:left">&gt;&gt;</td><td style="text-align:left">右移动运算符：把”&gt;&gt;”左边的运算数的各二进位全部右移若干位，”&gt;&gt;”右边的数指定移动的位数</td><td style="text-align:left">a &gt;&gt; 2 输出结果 15 ，二进制解释： 0000 1111</td></tr></tbody></table></div><h4 id="Python逻辑运算符"><a href="#Python逻辑运算符" class="headerlink" title="Python逻辑运算符"></a>Python逻辑运算符</h4><div class="table-container"><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">逻辑表达式</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">and</td><td style="text-align:left">x and y</td><td style="text-align:left">布尔”与” - 如果 x 为 False，x and y 返回 x 的值，否则返回 y 的计算值。</td><td style="text-align:left">(a and b) 返回 20。</td></tr><tr><td style="text-align:left">or</td><td style="text-align:left">x or y</td><td style="text-align:left">布尔”或” - 如果 x 是 True，它返回 x 的值，否则它返回 y 的计算值。</td><td style="text-align:left">(a or b) 返回 10。</td></tr><tr><td style="text-align:left">not</td><td style="text-align:left">not x</td><td style="text-align:left">布尔”非” - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td><td style="text-align:left">not(a and b) 返回 False</td></tr></tbody></table></div><h4 id="Python成员运算符"><a href="#Python成员运算符" class="headerlink" title="Python成员运算符"></a>Python成员运算符</h4><div class="table-container"><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">in</td><td style="text-align:left">如果在指定的序列中找到值返回 True，否则返回 False。</td><td style="text-align:left">x 在 y 序列中 , 如果 x 在 y 序列中返回 True。</td></tr><tr><td style="text-align:left">not in</td><td style="text-align:left">如果在指定的序列中没有找到值返回 True，否则返回 False。</td><td style="text-align:left">x 不在 y 序列中 , 如果 x 不在 y 序列中返回 True。</td></tr></tbody></table></div><h4 id="Python身份运算符"><a href="#Python身份运算符" class="headerlink" title="Python身份运算符"></a>Python身份运算符</h4><div class="table-container"><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">is</td><td style="text-align:left">is 是判断两个标识符是不是引用自一个对象</td><td style="text-align:left"><strong>x is y</strong>, 类似 <strong>id(x) == id(y)</strong> , 如果引用的是同一个对象则返回 True，否则返回 False</td></tr><tr><td style="text-align:left">is not</td><td style="text-align:left">is not 是判断两个标识符是不是引用自不同对象</td><td style="text-align:left"><strong>x is not y</strong> ， 类似 <strong>id(a) != id(b)</strong>。如果引用的不是同一个对象则返回结果 True，否则返回 False。</td></tr></tbody></table></div><ul><li><a href="https://www.runoob.com/python/python-func-id.html">id()</a> 函数用于获取对象内存地址</li><li><code>is</code> 用于判断两个变量引用对象是否为同一个， <code>==</code> 用于判断引用变量的值是否相等。</li></ul><h4 id="Python运算符优先级"><a href="#Python运算符优先级" class="headerlink" title="Python运算符优先级"></a>Python运算符优先级</h4><div class="table-container"><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">**</td><td style="text-align:left">指数 (最高优先级)</td></tr><tr><td style="text-align:left">~ + -</td><td style="text-align:left">按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)</td></tr><tr><td style="text-align:left">* / % //</td><td style="text-align:left">乘，除，求余数和取整除</td></tr><tr><td style="text-align:left">+ -</td><td style="text-align:left">加法减法</td></tr><tr><td style="text-align:left">&gt;&gt; &lt;&lt;</td><td style="text-align:left">右移，左移运算符</td></tr><tr><td style="text-align:left">&amp;</td><td style="text-align:left">位 ‘AND’</td></tr><tr><td style="text-align:left">^ |</td><td style="text-align:left">位运算符</td></tr><tr><td style="text-align:left">&lt;= &lt; &gt; &gt;=</td><td style="text-align:left">比较运算符</td></tr><tr><td style="text-align:left">== !=</td><td style="text-align:left">等于运算符</td></tr><tr><td style="text-align:left">= %= /= //= -= += <em>= *</em>=</td><td style="text-align:left">赋值运算符</td></tr><tr><td style="text-align:left">is    is not</td><td style="text-align:left">身份运算符</td></tr><tr><td style="text-align:left">in    not in</td><td style="text-align:left">成员运算符</td></tr><tr><td style="text-align:left">not and or</td><td style="text-align:left">逻辑运算符</td></tr></tbody></table></div><ul><li>逻辑比较中，顺序 not&gt;and&gt;or</li><li>Python3不再支持 &lt;&gt; 运算符</li></ul><h3 id="数字-Number"><a href="#数字-Number" class="headerlink" title="数字(Number)"></a>数字(Number)</h3><ul><li><strong>整型(Int)</strong> - 通常被称为是整型或整数，是正或负整数，不带小数点。Python3 整型是没有限制大小的，可以当作 Long 类型使用，所以 Python3 没有 Python2 的 Long 类型。</li><li><strong>浮点型(float)</strong> - 浮点型由整数部分与小数部分组成，浮点型也可以使用科学计数法表示（2.5e2 = 2.5 x 102 = 250）</li><li><strong>复数( (complex))</strong> - 复数由实数部分和虚数部分构成，可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型。</li></ul><h4 id="Python-数字类型转换"><a href="#Python-数字类型转换" class="headerlink" title="Python 数字类型转换"></a>Python 数字类型转换</h4><ul><li><strong>int(x)</strong> 将x转换为一个整数。</li><li><strong>float(x)</strong> 将x转换到一个浮点数。</li><li><strong>complex(x)</strong> 将x转换到一个复数，实数部分为 x，虚数部分为 0。</li><li><strong>complex(x, y)</strong> 将 x 和 y 转换到一个复数，实数部分为 x，虚数部分为 y。x 和 y 是数字表达式。</li></ul><h4 id="Python-数字运算"><a href="#Python-数字运算" class="headerlink" title="Python 数字运算"></a>Python 数字运算</h4><p>加<code>+</code>, 减<code>-</code>,乘 <code>*</code> ,除<code>/</code>,取整除<code>//</code>,幂<code>**</code></p><ul><li>在交互模式中，最后被输出的表达式结果被赋值给变量 <code>_</code> </li></ul><h4 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h4><div class="table-container"><table><thead><tr><th style="text-align:left">函数</th><th style="text-align:left">返回值 ( 描述 )</th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-abs.html">abs(x)</a></td><td style="text-align:left">返回数字的绝对值，如abs(-10) 返回 10</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-ceil.html">ceil(x) </a></td><td style="text-align:left">返回数字的上入整数，如math.ceil(4.1) 返回 5</td></tr><tr><td style="text-align:left">cmp(x, y)</td><td style="text-align:left">如果 x &lt; y 返回 -1, 如果 x == y 返回 0, 如果 x &gt; y 返回 1。 <strong>Python 3 已废弃，使用 (x&gt;y)-(x&lt;y) 替换</strong>。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-exp.html">exp(x) </a></td><td style="text-align:left">返回e的x次幂(ex),如math.exp(1) 返回2.718281828459045</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-fabs.html">fabs(x)</a></td><td style="text-align:left">返回数字的绝对值，如math.fabs(-10) 返回10.0</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-floor.html">floor(x) </a></td><td style="text-align:left">返回数字的下舍整数，如math.floor(4.9)返回 4</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-log.html">log(x) </a></td><td style="text-align:left">如math.log(math.e)返回1.0,math.log(100,10)返回2.0</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-log10.html">log10(x) </a></td><td style="text-align:left">返回以10为基数的x的对数，如math.log10(100)返回 2.0</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-max.html">max(x1, x2,…) </a></td><td style="text-align:left">返回给定参数的最大值，参数可以为序列。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-min.html">min(x1, x2,…) </a></td><td style="text-align:left">返回给定参数的最小值，参数可以为序列。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-modf.html">modf(x) </a></td><td style="text-align:left">返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-pow.html">pow(x, y)</a></td><td style="text-align:left">x**y 运算后的值。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-round.html">round(x [,n])</a></td><td style="text-align:left">返回浮点数 x 的四舍五入值，如给出 n 值，则代表舍入到小数点后的位数。<strong>其实准确的说是保留值将保留到离上一位更近的一端。</strong></td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-sqrt.html">sqrt(x) </a></td><td style="text-align:left">返回数字x的平方根。</td></tr></tbody></table></div><h4 id="随机数函数"><a href="#随机数函数" class="headerlink" title="随机数函数"></a>随机数函数</h4><div class="table-container"><table><thead><tr><th style="text-align:left">函数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-choice.html">choice(seq)</a></td><td style="text-align:left">从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-randrange.html">randrange ([start,] stop [,step]) </a></td><td style="text-align:left">从指定范围内，按指定基数递增的集合中获取一个随机数，基数默认值为 1</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-random.html">random() </a></td><td style="text-align:left">随机生成下一个实数，它在[0,1)范围内。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-seed.html">seed([x]) </a></td><td style="text-align:left">改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-shuffle.html">shuffle(lst) </a></td><td style="text-align:left">将序列的所有元素随机排序</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-uniform.html">uniform(x, y)</a></td><td style="text-align:left">随机生成下一个实数，它在[x,y]范围内。</td></tr></tbody></table></div><h4 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h4><div class="table-container"><table><thead><tr><th style="text-align:left">函数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-acos.html">acos(x)</a></td><td style="text-align:left">返回x的反余弦弧度值。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-asin.html">asin(x)</a></td><td style="text-align:left">返回x的反正弦弧度值。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-atan.html">atan(x)</a></td><td style="text-align:left">返回x的反正切弧度值。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-atan2.html">atan2(y, x)</a></td><td style="text-align:left">返回给定的 X 及 Y 坐标值的反正切值。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-cos.html">cos(x)</a></td><td style="text-align:left">返回x的弧度的余弦值。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-hypot.html">hypot(x, y)</a></td><td style="text-align:left">返回欧几里德范数 sqrt(x<em>x + y</em>y)。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-sin.html">sin(x)</a></td><td style="text-align:left">返回的x弧度的正弦值。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-tan.html">tan(x)</a></td><td style="text-align:left">返回x弧度的正切值。</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-degrees.html">degrees(x)</a></td><td style="text-align:left">将弧度转换为角度,如degrees(math.pi/2) ， 返回90.0</td></tr><tr><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-func-number-radians.html">radians(x)</a></td><td style="text-align:left">将角度转换为弧度</td></tr></tbody></table></div><h4 id="数学常量"><a href="#数学常量" class="headerlink" title="数学常量"></a>数学常量</h4><div class="table-container"><table><thead><tr><th style="text-align:left">常量</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">pi</td><td style="text-align:left">数学常量 pi（圆周率，一般以π来表示）</td></tr><tr><td style="text-align:left">e</td><td style="text-align:left">数学常量 e，e即自然常数（自然常数）。</td></tr></tbody></table></div><h3 id="Python3-字符串"><a href="#Python3-字符串" class="headerlink" title="Python3 字符串"></a>Python3 字符串</h3><ul><li>使用引号( <code>'</code> 或 <code>"</code> )来创建字符串。</li></ul><h4 id="Python-访问字符串中的值"><a href="#Python-访问字符串中的值" class="headerlink" title="Python 访问字符串中的值"></a>Python 访问字符串中的值</h4><ul><li><p>不支持单字符类型</p></li><li><p>使用方括号 <strong>[]</strong> 来截取字符串</p></li></ul><h4 id="Python转义字符"><a href="#Python转义字符" class="headerlink" title="Python转义字符"></a>Python转义字符</h4><div class="table-container"><table><thead><tr><th style="text-align:left">转义字符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">\(在行尾时)</td><td style="text-align:left">续行符</td><td style="text-align:left"><code>&gt;&gt;&gt; print("line1 \ ... line2 \ ... line3") line1 line2 line3 &gt;&gt;&gt;</code></td></tr><tr><td style="text-align:left">\\</td><td style="text-align:left">反斜杠符号</td><td style="text-align:left"><code>&gt;&gt;&gt; print("\\") \</code></td></tr><tr><td style="text-align:left">\’</td><td style="text-align:left">单引号</td><td style="text-align:left"><code>&gt;&gt;&gt; print('\'') '</code></td></tr><tr><td style="text-align:left">\”</td><td style="text-align:left">双引号</td><td style="text-align:left"><code>&gt;&gt;&gt; print("\"") "</code></td></tr><tr><td style="text-align:left">\a</td><td style="text-align:left">响铃</td><td style="text-align:left"><code>&gt;&gt;&gt; print("\a")</code>执行后电脑有响声。</td></tr><tr><td style="text-align:left">\b</td><td style="text-align:left">退格(Backspace)</td><td style="text-align:left"><code>&gt;&gt;&gt; print("Hello \b World!") Hello World!</code></td></tr><tr><td style="text-align:left">\000</td><td style="text-align:left">空</td><td style="text-align:left"><code>&gt;&gt;&gt; print("\000") &gt;&gt;&gt;</code></td></tr><tr><td style="text-align:left">\n</td><td style="text-align:left">换行</td><td style="text-align:left"><code>&gt;&gt;&gt; print("\n")  &gt;&gt;&gt;</code></td></tr><tr><td style="text-align:left">\v</td><td style="text-align:left">纵向制表符</td><td style="text-align:left"><code>&gt;&gt;&gt; print("Hello \v World!") Hello        World! &gt;&gt;&gt;</code></td></tr><tr><td style="text-align:left">\t</td><td style="text-align:left">横向制表符</td><td style="text-align:left"><code>&gt;&gt;&gt; print("Hello \t World!") Hello    World! &gt;&gt;&gt;</code></td></tr><tr><td style="text-align:left">\r</td><td style="text-align:left">回车，将 <strong>\r</strong> 后面的内容移到字符串开头，并逐一替换开头部分的字符，直至将 <strong>\r</strong> 后面的内容完全替换完成。</td><td style="text-align:left"><code>&gt;&gt;&gt; print("Hello\rWorld!") World! &gt;&gt;&gt; print('google runoob taobao\r123456') 123456 runoob taobao</code></td></tr><tr><td style="text-align:left">\f</td><td style="text-align:left">换页</td><td style="text-align:left"><code>&gt;&gt;&gt; print("Hello \f World!") Hello        World! &gt;&gt;&gt;</code></td></tr><tr><td style="text-align:left">\yyy</td><td style="text-align:left">八进制数，y 代表 0~7 的字符，例如：\012 代表换行。</td><td style="text-align:left"><code>&gt;&gt;&gt; print("\110\145\154\154\157\40\127\157\162\154\144\41") Hello World!</code></td></tr><tr><td style="text-align:left">\xyy</td><td style="text-align:left">十六进制数，以 \x 开头，y 代表的字符，例如：\x0a 代表换行</td><td style="text-align:left"><code>&gt;&gt;&gt; print("\x48\x65\x6c\x6c\x6f\x20\x57\x6f\x72\x6c\x64\x21") Hello World!</code></td></tr><tr><td style="text-align:left">\other</td><td style="text-align:left">其它的字符以普通格式输出</td></tr></tbody></table></div><h4 id="Python字符串运算符"><a href="#Python字符串运算符" class="headerlink" title="Python字符串运算符"></a>Python字符串运算符</h4><p>下表实例变量 a 值为字符串 “Hello”，b 变量值为 “Python”：</p><div class="table-container"><table><thead><tr><th style="text-align:left">操作符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">+</td><td style="text-align:left">字符串连接</td><td style="text-align:left">a + b 输出结果： HelloPython</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">重复输出字符串</td><td style="text-align:left">a*2 输出结果：HelloHello</td></tr><tr><td style="text-align:left">[]</td><td style="text-align:left">通过索引获取字符串中字符</td><td style="text-align:left">a[1] 输出结果 <strong>e</strong></td></tr><tr><td style="text-align:left">[ : ]</td><td style="text-align:left">截取字符串中的一部分，遵循<strong>左闭右开</strong>原则，str[0:2] 是不包含第 3 个字符的。</td><td style="text-align:left">a[1:4] 输出结果 <strong>ell</strong></td></tr><tr><td style="text-align:left">in</td><td style="text-align:left">成员运算符 - 如果字符串中包含给定的字符返回 True</td><td style="text-align:left"><strong>‘H’ in a</strong> 输出结果 True</td></tr><tr><td style="text-align:left">not in</td><td style="text-align:left">成员运算符 - 如果字符串中不包含给定的字符返回 True</td><td style="text-align:left"><strong>‘M’ not in a</strong> 输出结果 True</td></tr><tr><td style="text-align:left">r/R</td><td style="text-align:left">原始字符串 - 原始字符串：所有的字符串都是直接按照字面的意思来使用，没有转义特殊或不能打印的字符。 原始字符串除在字符串的第一个引号前加上字母 <strong>r</strong>（可以大小写）以外，与普通字符串有着几乎完全相同的语法。</td><td style="text-align:left"><code>print( r'\n' ) print( R'\n' )</code></td></tr><tr><td style="text-align:left">%</td><td style="text-align:left">格式字符串</td><td style="text-align:left">请看下一节内容。</td></tr></tbody></table></div><h4 id="Python字符串格式化"><a href="#Python字符串格式化" class="headerlink" title="Python字符串格式化"></a>Python字符串格式化</h4><div class="table-container"><table><thead><tr><th style="text-align:left">符  号</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">%c</td><td style="text-align:left">格式化字符及其ASCII码</td></tr><tr><td style="text-align:left">%s</td><td style="text-align:left">格式化字符串</td></tr><tr><td style="text-align:left">%d</td><td style="text-align:left">格式化整数</td></tr><tr><td style="text-align:left">%u</td><td style="text-align:left">格式化无符号整型</td></tr><tr><td style="text-align:left">%o</td><td style="text-align:left">格式化无符号八进制数</td></tr><tr><td style="text-align:left">%x</td><td style="text-align:left">格式化无符号十六进制数</td></tr><tr><td style="text-align:left">%X</td><td style="text-align:left">格式化无符号十六进制数（大写）</td></tr><tr><td style="text-align:left">%f</td><td style="text-align:left">格式化浮点数字，可指定小数点后的精度</td></tr><tr><td style="text-align:left">%e</td><td style="text-align:left">用科学计数法格式化浮点数</td></tr><tr><td style="text-align:left">%E</td><td style="text-align:left">作用同%e，用科学计数法格式化浮点数</td></tr><tr><td style="text-align:left">%g</td><td style="text-align:left">%f和%e的简写</td></tr><tr><td style="text-align:left">%G</td><td style="text-align:left">%f 和 %E 的简写</td></tr><tr><td style="text-align:left">%p</td><td style="text-align:left">用十六进制数格式化变量的地址</td></tr></tbody></table></div><p>格式化操作符辅助指令:</p><div class="table-container"><table><thead><tr><th style="text-align:left">符号</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">*</td><td style="text-align:left">定义宽度或者小数点精度</td></tr><tr><td style="text-align:left">-</td><td style="text-align:left">用做左对齐</td></tr><tr><td style="text-align:left">+</td><td style="text-align:left">在正数前面显示加号( + )</td></tr><tr><td style="text-align:left"><sp></sp></td><td style="text-align:left">在正数前面显示空格</td></tr><tr><td style="text-align:left">#</td><td style="text-align:left">在八进制数前面显示零(‘0’)，在十六进制前面显示’0x’或者’0X’(取决于用的是’x’还是’X’)</td></tr><tr><td style="text-align:left">0</td><td style="text-align:left">显示的数字前面填充’0’而不是默认的空格</td></tr><tr><td style="text-align:left">%</td><td style="text-align:left">‘%%’输出一个单一的’%’</td></tr><tr><td style="text-align:left">(var)</td><td style="text-align:left">映射变量(字典参数)</td></tr><tr><td style="text-align:left">m.n.</td><td style="text-align:left">m 是显示的最小总宽度,n 是小数点后的位数(如果可用的话)</td></tr></tbody></table></div><h4 id="Python三引号"><a href="#Python三引号" class="headerlink" title="Python三引号"></a>Python三引号</h4><ul><li>允许一个字符串跨多行</li></ul><h4 id="f-string"><a href="#f-string" class="headerlink" title="f-string"></a>f-string</h4><ul><li>python3.6 之后版本新增功能</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">&gt;&gt;&gt; name = 'Runoob'&gt;&gt;&gt; f'Hello {name}'  # 替换变量 'Hello Runoob'&gt;&gt;&gt; f'{1+2}'         # 使用表达式n'3'&gt;&gt;&gt; w = {'name': 'Runoob', 'url': 'www.runoob.com'}&gt;&gt;&gt; f'{w["name"]}: {w["url"]}'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在 Python 3.8 的版本中可以使用 <strong>=</strong> 符号来拼接运算表达式与结果</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">&gt;&gt;&gt; x = 1&gt;&gt;&gt; print(f'{x+1}')   # Python 3.62&gt;&gt;&gt; x = 1&gt;&gt;&gt; print(f'{x+1=}')   # Python 3.8'x+1=2'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Unicode-字符串"><a href="#Unicode-字符串" class="headerlink" title="Unicode 字符串"></a>Unicode 字符串</h4><p>在Python3中，所有的字符串都是Unicode字符串</p><h4 id="Python-的字符串内建函数"><a href="#Python-的字符串内建函数" class="headerlink" title="Python 的字符串内建函数"></a>Python 的字符串内建函数</h4><div class="table-container"><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">方法及描述</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-capitalize.html">capitalize()</a> 将字符串的第一个字符转换为大写</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-center.html">center(width, fillchar)</a> 返回一个指定的宽度 width 居中的字符串，fillchar 为填充的字符，默认为空格。</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-count.html">count(str, beg= 0,end=len(string))</a> 返回 str 在 string 里面出现的次数，如果 beg 或者 end 指定则返回指定范围内 str 出现的次数</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-decode.html">bytes.decode(encoding=”utf-8”, errors=”strict”)</a> Python3 中没有 decode 方法，但我们可以使用 bytes 对象的 decode() 方法来解码给定的 bytes 对象，这个 bytes 对象可以由 str.encode() 来编码返回。</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-encode.html">encode(encoding=’UTF-8’,errors=’strict’)</a> 以 encoding 指定的编码格式编码字符串，如果出错默认报一个ValueError 的异常，除非 errors 指定的是’ignore’或者’replace’</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-endswith.html">endswith(suffix, beg=0, end=len(string))</a> 检查字符串是否以 obj 结束，如果beg 或者 end 指定则检查指定的范围内是否以 obj 结束，如果是，返回 True,否则返回 False.</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-expandtabs.html">expandtabs(tabsize=8)</a> 把字符串 string 中的 tab 符号转为空格，tab 符号默认的空格数是 8 。</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-find.html">find(str, beg=0, end=len(string))</a> 检测 str 是否包含在字符串中，如果指定范围 beg 和 end ，则检查是否包含在指定范围内，如果包含返回开始的索引值，否则返回-1</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-index.html">index(str, beg=0, end=len(string))</a> 跟find()方法一样，只不过如果str不在字符串中会报一个异常。</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-isalnum.html">isalnum()</a> 如果字符串至少有一个字符并且所有字符都是字母或数字则返 回 True，否则返回 False</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-isalpha.html">isalpha()</a> 如果字符串至少有一个字符并且所有字符都是字母或中文字则返回 True, 否则返回 False</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-isdigit.html">isdigit()</a> 如果字符串只包含数字则返回 True 否则返回 False..</td></tr><tr><td style="text-align:left">13</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-islower.html">islower()</a> 如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True，否则返回 False</td></tr><tr><td style="text-align:left">14</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-isnumeric.html">isnumeric()</a> 如果字符串中只包含数字字符，则返回 True，否则返回 False</td></tr><tr><td style="text-align:left">15</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-isspace.html">isspace()</a> 如果字符串中只包含空白，则返回 True，否则返回 False.</td></tr><tr><td style="text-align:left">16</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-istitle.html">istitle()</a> 如果字符串是标题化的(见 title())则返回 True，否则返回 False</td></tr><tr><td style="text-align:left">17</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-isupper.html">isupper()</a> 如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True，否则返回 False</td></tr><tr><td style="text-align:left">18</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-join.html">join(seq)</a> 以指定字符串作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串</td></tr><tr><td style="text-align:left">19</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-len.html">len(string)</a> 返回字符串长度</td></tr><tr><td style="text-align:left">20</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-ljust.html">ljust(width[, fillchar])</a> 返回一个原字符串左对齐,并使用 fillchar 填充至长度 width 的新字符串，fillchar 默认为空格。</td></tr><tr><td style="text-align:left">21</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-lower.html">lower()</a> 转换字符串中所有大写字符为小写.</td></tr><tr><td style="text-align:left">22</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-lstrip.html">lstrip()</a> 截掉字符串左边的空格或指定字符。</td></tr><tr><td style="text-align:left">23</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-maketrans.html">maketrans()</a> 创建字符映射的转换表，对于接受两个参数的最简单的调用方式，第一个参数是字符串，表示需要转换的字符，第二个参数也是字符串表示转换的目标。</td></tr><tr><td style="text-align:left">24</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-max.html">max(str)</a> 返回字符串 str 中最大的字母。</td></tr><tr><td style="text-align:left">25</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-min.html">min(str)</a> 返回字符串 str 中最小的字母。</td></tr><tr><td style="text-align:left">26</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-replace.html">replace(old, new [, max])</a> 把 将字符串中的 old 替换成 new,如果 max 指定，则替换不超过 max 次。</td></tr><tr><td style="text-align:left">27</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-rfind.html">rfind(str, beg=0,end=len(string))</a> 类似于 find()函数，不过是从右边开始查找.</td></tr><tr><td style="text-align:left">28</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-rindex.html">rindex( str, beg=0, end=len(string))</a> 类似于 index()，不过是从右边开始.</td></tr><tr><td style="text-align:left">29</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-rjust.html">rjust(width,[, fillchar])</a> 返回一个原字符串右对齐,并使用fillchar(默认空格）填充至长度 width 的新字符串</td></tr><tr><td style="text-align:left">30</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-rstrip.html">rstrip()</a> 删除字符串字符串末尾的空格.</td></tr><tr><td style="text-align:left">31</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-split.html">split(str=””, num=string.count(str))</a> 以 str 为分隔符截取字符串，如果 num 有指定值，则仅截取 num+1 个子字符串</td></tr><tr><td style="text-align:left">32</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-splitlines.html">splitlines([keepends])</a> 按照行(‘\r’, ‘\r\n’, \n’)分隔，返回一个包含各行作为元素的列表，如果参数 keepends 为 False，不包含换行符，如果为 True，则保留换行符。</td></tr><tr><td style="text-align:left">33</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-startswith.html">startswith(substr, beg=0,end=len(string))</a> 检查字符串是否是以指定子字符串 substr 开头，是则返回 True，否则返回 False。如果beg 和 end 指定值，则在指定范围内检查。</td></tr><tr><td style="text-align:left">34</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-strip.html">strip([chars])</a> 在字符串上执行 lstrip()和 rstrip()</td></tr><tr><td style="text-align:left">35</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-swapcase.html">swapcase()</a> 将字符串中大写转换为小写，小写转换为大写</td></tr><tr><td style="text-align:left">36</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-title.html">title()</a> 返回”标题化”的字符串,就是说所有单词都是以大写开始，其余字母均为小写(见 istitle())</td></tr><tr><td style="text-align:left">37</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-translate.html">translate(table, deletechars=””)</a> 根据 str 给出的表(包含 256 个字符)转换 string 的字符, 要过滤掉的字符放到 deletechars 参数中</td></tr><tr><td style="text-align:left">38</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-upper.html">upper()</a> 转换字符串中的小写字母为大写</td></tr><tr><td style="text-align:left">39</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-zfill.html">zfill (width)</a> 返回长度为 width 的字符串，原字符串右对齐，前面填充0</td></tr><tr><td style="text-align:left">40</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-string-isdecimal.html">isdecimal()</a> 检查字符串是否只包含十进制字符，如果是返回 true，否则返回 false。</td></tr></tbody></table></div><h3 id="Python3-列表"><a href="#Python3-列表" class="headerlink" title="Python3 列表"></a>Python3 列表</h3><ul><li>列表都可以进行的操作包括索引，切片，加，乘，检查成员。</li></ul><h4 id="访问列表中的值"><a href="#访问列表中的值" class="headerlink" title="访问列表中的值"></a>访问列表中的值</h4><ul><li><p>列表索引从 <strong>0</strong> 开始，第二个索引是 <strong>1</strong>，依此类推</p></li><li><p>使用方括号 <strong>[]</strong> 的形式截取字符，左闭右开</p></li></ul><h4 id="更新列表"><a href="#更新列表" class="headerlink" title="更新列表"></a>更新列表</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">list[2] = 2001list.append(100)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="删除列表元素"><a href="#删除列表元素" class="headerlink" title="删除列表元素"></a>删除列表元素</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">del list[2]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Python列表脚本操作符"><a href="#Python列表脚本操作符" class="headerlink" title="Python列表脚本操作符"></a>Python列表脚本操作符</h4><div class="table-container"><table><thead><tr><th style="text-align:left">Python 表达式</th><th style="text-align:left">结果</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">len([1, 2, 3])</td><td style="text-align:left">3</td><td style="text-align:left">长度</td></tr><tr><td style="text-align:left">[1, 2, 3] + [4, 5, 6]</td><td style="text-align:left">[1, 2, 3, 4, 5, 6]</td><td style="text-align:left">组合</td></tr><tr><td style="text-align:left">[‘Hi!’] * 4</td><td style="text-align:left">[‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’]</td><td style="text-align:left">重复</td></tr><tr><td style="text-align:left">3 in [1, 2, 3]</td><td style="text-align:left">True</td><td style="text-align:left">元素是否存在于列表中</td></tr><tr><td style="text-align:left">for x in [1, 2, 3]: print(x, end=” “)</td><td style="text-align:left">1 2 3</td><td style="text-align:left">迭代</td></tr></tbody></table></div><h4 id="Python列表截取与拼接"><a href="#Python列表截取与拼接" class="headerlink" title="Python列表截取与拼接"></a>Python列表截取与拼接</h4><div class="table-container"><table><thead><tr><th style="text-align:left">Python 表达式</th><th style="text-align:left">结果</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">L[2]</td><td style="text-align:left">‘Taobao’</td><td style="text-align:left">读取第三个元素</td></tr><tr><td style="text-align:left">L[-2]</td><td style="text-align:left">‘Runoob’</td><td style="text-align:left">从右侧开始读取倒数第二个元素: count from the right</td></tr><tr><td style="text-align:left">L[1:]</td><td style="text-align:left">[‘Runoob’, ‘Taobao’]</td><td style="text-align:left">输出从第二个元素开始后的所有元素</td></tr></tbody></table></div><h4 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h4><p>使用嵌套列表即在列表里创建其它列表</p><h4 id="Python列表函数-amp-方法"><a href="#Python列表函数-amp-方法" class="headerlink" title="Python列表函数&amp;方法"></a>Python列表函数&amp;方法</h4><p>Python包含以下函数:</p><div class="table-container"><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">函数</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-len.html">len(list)</a> 列表元素个数</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-max.html">max(list)</a> 返回列表元素最大值</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-min.html">min(list)</a> 返回列表元素最小值</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-list.html">list(seq)</a> 将元组转换为列表</td></tr></tbody></table></div><p>Python包含以下方法:</p><div class="table-container"><table><thead><tr><th style="text-align:left">号</th><th style="text-align:left">方法</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-append.html">list.append(obj)</a> 在列表末尾添加新的对象</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-count.html">list.count(obj)</a> 统计某个元素在列表中出现的次数</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-extend.html">list.extend(seq)</a> 在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-index.html">list.index(obj)</a> 从列表中找出某个值第一个匹配项的索引位置</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-insert.html">list.insert(index, obj)</a> 将对象插入列表</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-pop.html">list.pop([index=-1])</a> 移除列表中的一个元素（默认最后一个元素），并且返回该元素的值</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-remove.html">list.remove(obj)</a> 移除列表中某个值的第一个匹配项</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-reverse.html">list.reverse()</a> 反向列表中元素</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-sort.html">list.sort( key=None, reverse=False)</a> 对原列表进行排序</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-clear.html">list.clear()</a> 清空列表</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left"><a href="https://www.runoob.com/python3/python3-att-list-copy.html">list.copy()</a> 复制列表</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Python </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客搭建教程</title>
      <link href="2021/02/24/hexo-da-jian-jiao-cheng/"/>
      <url>2021/02/24/hexo-da-jian-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本教程为使用Mac搭建Hexo个人博客</p></blockquote><p><a href="https://hexo.io/docs/">Hexo官方安装部署文档</a></p><p><a href="https://hexo.io/zh-cn/docs/">Hexo官方中文安装部署文档</a></p><h4 id="1-下载安装Nodejs"><a href="#1-下载安装Nodejs" class="headerlink" title="1. 下载安装Nodejs"></a>1. 下载安装Nodejs</h4><p>在Nodejs官网，下载最新版Node.js，并安装至/usr/local/bin/node</p><p>安装npm至/usr/local/bin/npm</p><h4 id="2-启动iterm，安装cnpm，安装"><a href="#2-启动iterm，安装cnpm，安装" class="headerlink" title="2. 启动iterm，安装cnpm，安装"></a>2. 启动iterm，安装cnpm，安装</h4><p>进入Mac 命令行中，输入</p><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">node -v     # 查看node版本  查看nodenpm -v      # 查看npm版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>安装cnpm</p><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">npm install -g cnpm --registry=https://registry.npm.taobao.org    # 安装cnpmcnpm -v     # 查看cnpm版本版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3.安装hexo"></a>3.安装hexo</h4><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">cnpm install -g hexo-cli    # 安装hexohexo -v                     # 查看hexo的版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="4-在本地创建博客目录"><a href="#4-在本地创建博客目录" class="headerlink" title="4. 在本地创建博客目录"></a>4. 在本地创建博客目录</h4><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">cd 【本地目录】 # 该目录用于存放未来全部的博客内容mkdir blogcd bloghexo init   # 初始化博客hexo s      # 启动hexo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p> 默认启动本地4000端口<br> <a href="http://localhost:4000">http://localhost:4000</a></p></blockquote><p>在blog目录下<br></p><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">hexo n "我的第一篇博客"  # 创建博客hexo clean 清空缓存hexo g 自动创建静态文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p></p><h4 id="5-创建github的repository"><a href="#5-创建github的repository" class="headerlink" title="5. 创建github的repository"></a>5. 创建github的repository</h4><p>进入github，创建与登录账号同名的repository</p><blockquote><p>xxx.github.io</p></blockquote><p>并生成token：【Token】<br><strong> Token极其私密，请牢记，勿分享！ </strong></p><h4 id="6-本地安装hexo-git插件"><a href="#6-本地安装hexo-git插件" class="headerlink" title="6. 本地安装hexo-git插件"></a>6. 本地安装hexo-git插件</h4><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">cnpm install --save hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在blog目录下，修改_config.yml文件</p><p>Deployment下，修改为以下内容</p><blockquote><p>deploy:<br>type: git<br>repo: <a href="https://github.com/xxx/xxx.github.io.git">https://github.com/xxx/xxx.github.io.git</a><br>branch: master<br>token: <em>*</em></p></blockquote><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">hexo d    # 部署Hexo服务到远端<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="7-访问在线博客"><a href="#7-访问在线博客" class="headerlink" title="7. 访问在线博客"></a>7. 访问在线博客</h4><blockquote><p>xxx.github.io</p></blockquote><h4 id="8-定制主题"><a href="#8-定制主题" class="headerlink" title="8. 定制主题"></a>8. 定制主题</h4><p>Hexo的主题有很多，如</p><blockquote><p>github.com/litten/hexo-theme-yilia<br>github.com/cendeal/hexo-theme-aomori<br>github.com/jangdelong/hexo-theme-xups<br>github.com/blinkfox/hexo-theme-matery</p></blockquote><p>将主题克隆至本地<br></p><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">git clone http://github.com/litten/hexo-theme-yilia.git themes/yiliagit clone https://github.com/cendeal/hexo-theme-aomori.git themes/aomorigit clone https://github.com/jangdelong/hexo-theme-xups.git themes/xupsgit clone https://github.com/blinkfox/hexo-theme-matery.git themes/materyvim _config.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>将 theme: landscape 修改为 theme: <strong>yilia</strong>或<strong>aomori</strong><br>在本地编译，部署服务<br><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">hexo cleanhexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>或<br><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">hexo d -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p></p><h4 id="9-修复模板缺失问题"><a href="#9-修复模板缺失问题" class="headerlink" title="9. 修复模板缺失问题"></a>9. 修复模板缺失问题</h4><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">npm i hexo-generator-json-content --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改_config.yml，增加以下配置</p><pre class="line-numbers language-none"><code class="language-none">jsonContent:  meta: false  pages: false  posts:   title: true   date: true   path: true   text: false   raw: false   content: false   slug: false   updated: false   comments: false   link: false   permalink: false   excerpt: false   categories: false   tags: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="10-使用LaTeX"><a href="#10-使用LaTeX" class="headerlink" title="10. 使用LaTeX"></a>10. 使用LaTeX</h4><p>可参考 <a href="https://blog.csdn.net/weixin_44191286/article/details/102702479">Hexo博客中使用Latex</a></p>]]></content>
      
      
      <categories>
          
          <category> 实用工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>COMP9020课程笔记（Week2）</title>
      <link href="2021/02/24/comp9020-ke-cheng-bi-ji-week2/"/>
      <url>2021/02/24/comp9020-ke-cheng-bi-ji-week2/</url>
      
        <content type="html"><![CDATA[<h2 id="Week-2"><a href="#Week-2" class="headerlink" title="Week 2"></a>Week 2</h2><h2 id="Logical-逻辑"><a href="#Logical-逻辑" class="headerlink" title="Logical 逻辑"></a>Logical 逻辑</h2><h3 id="逻辑等价-Logical-Equivalence"><a href="#逻辑等价-Logical-Equivalence" class="headerlink" title="逻辑等价  Logical Equivalence"></a>逻辑等价  Logical Equivalence</h3><script type="math/tex; mode=display">\begin{align} \mbox{Excluded Middle} \qquad p\lor \lnot p & \equiv \top \\\mbox{Contradiction} \qquad p\wedge \lnot p & \equiv \bot \\\mbox{Idempotence} \qquad \quad p\lor p & \equiv p \\p \wedge p & \equiv p \\\mbox{Double Negation} \qquad \quad \lnot \lnot p & \equiv p \\\mbox{Identity} \qquad \quad p \lor \bot & \equiv p \\p \wedge \top & \equiv p \\p \lor \top & \equiv \top \\p \wedge \bot & \equiv \bot \\\mbox {Commutativity} \qquad \quad p \lor q & \equiv q \lor v \\p\land q & \equiv q \land p \\\mbox {Associativity}\qquad (p \lor q ) \lor r & \equiv p \lor (q \lor r ) \\(p \land q ) \land r & \equiv p \land ( q \land r ) \\\mbox {Distribution}\qquad p \lor (q \land r) & \equiv (p \lor q) \land ( p \lor r) \\p \land (q \lor r) & \equiv (p \land q)\lor (p \land r) \\\mbox {De Morgan's laws}\qquad \lnot (p \land q) & \equiv \lnot p \lor \lnot q \\\lnot (p \lor q) & \equiv \lnot p \land \lnot q \\\mbox {Implication} \qquad \qquad p \Rightarrow q & \equiv \lnot p \lor q \\p \Leftrightarrow q & \equiv  (p \Rightarrow q) \land (q \Rightarrow p)\end{align}</script><p><strong>Example</strong></p><script type="math/tex; mode=display">\begin{array} ((r \land \lnot p ) \lor (r \land q)) \lor (( \lnot r \land \lnot p ) \lor (\lnot r \land q)) \\\qquad \equiv (r \land ( \lnot p \lor q )) \lor (\lnot r \land ( \lnot p \lor q )) \qquad \mbox {Distrib.} \\ \qquad \equiv (r \lor \lnot r) \land (\lnot p \lor q) \qquad \qquad \qquad \quad \mbox {Distrib.} \\ \qquad \equiv \top \land (\lnot p \lor q ) \qquad \qquad \qquad \qquad \quad \mbox {Excl. Mid.} \\ \qquad \equiv \lnot p \lor q \qquad \qquad \qquad \qquad \qquad \qquad \mbox {Ident.}\end{array}</script><script type="math/tex; mode=display">\color {Green} \checkmark p \Rightarrow ( q \Rightarrow r) \equiv ( p \Rightarrow q) \Rightarrow (p \Rightarrow r) \\\color {Red} \times (p \Rightarrow q ) \Rightarrow r \equiv p \Rightarrow (q \Rightarrow r )</script><div class="table-container"><table><thead><tr><th>p</th><th>q</th><th>r</th><th>$(p \Rightarrow q ) \Rightarrow r$</th><th style="text-align:left">$p \Rightarrow (q \Rightarrow r )$</th></tr></thead><tbody><tr><td>F</td><td>T</td><td>F</td><td>$ \color{Red}{\mbox{F}}$</td><td style="text-align:left">$ \color {Green} {\mbox{T}}$</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>A</th><th>B</th><th>$ A \Rightarrow B $</th><th>$\lnot ( A \Rightarrow B )$</th></tr></thead><tbody><tr><td>F<br>F<br>T<br>T</td><td>F<br>T<br>F<br>T</td><td>$ \color{Green}{\mbox{T}}$<br>$ \color{Green}{\mbox{T}}$<br>$ \color{Red}{\mbox{F}}$<br>$ \color{Green}{\mbox{T}}$</td><td>$ \color{Red}{\mbox{F}}$<br>$ \color{Red}{\mbox{F}}$<br>$ \color{Green}{\mbox{T}}$<br>$ \color{Red}{\mbox{F}}$</td></tr></tbody></table></div><h5 id="Example"><a href="#Example" class="headerlink" title="Example:"></a>Example:</h5><p>根据例题描述，得出：</p><ul><li>$J \Rightarrow \lnot S$</li><li>$S \Rightarrow K$</li><li>$K \Rightarrow J$</li></ul><p>求$\phi = (J\Rightarrow \lnot S) \land (S\Rightarrow K) \land (K\Rightarrow J)$为真的情形。</p><p>解析真值表为：</p><div class="table-container"><table><thead><tr><th>J</th><th>K</th><th>S</th><th>$J\Rightarrow \lnot S$</th><th>$S \Rightarrow K$</th><th>$K \Rightarrow J$</th><th>$\phi$</th></tr></thead><tbody><tr><td>F<br>F<br>F<br>F<br>T<br>T<br>T<br>T</td><td>F<br>F<br>T<br>T<br>F<br>F<br>T<br>T</td><td>F<br>T<br>F<br>T<br>F<br>T<br>F<br>T</td><td><br><br><br><br><br>F<br><br>F</td><td><br>F<br><br><br><br>F<br><br></td><td><br><br>F<br>F<br><br><br><br></td><td>$ \color{Green}{\mbox{T}}$<br>$ \color{Red}{\mbox{F}}$<br>$ \color{Red}{\mbox{F}}$<br>$ \color{Red}{\mbox{F}}$<br>$ \color{Green}{\mbox{T}}$<br>$ \color{Red}{\mbox{F}}$<br>$ \color{Green}{\mbox{T}}$<br>$ \color{Red}{\mbox{F}}$</td></tr></tbody></table></div><h5 id="Exercise-2-7-14"><a href="#Exercise-2-7-14" class="headerlink" title="Exercise 2.7.14:"></a>Exercise 2.7.14:</h5><p>Which of the following formulae are always true?</p><p>(a) $(p \land (p \Rightarrow q)) \Rightarrow q \color{Green}{\checkmark}$</p><p>(b) $((p \lor q) \land \lnot p) \Rightarrow \lnot q\color{Red}{\times}$</p><p>(e) $((p\Rightarrow q) \lor (q \Rightarrow r)) \Rightarrow (p \Rightarrow r)\color{Red}{\times}$</p><p>(f) $(p \land q) \Rightarrow q\color{Green}{\checkmark}$</p><h3 id="有效性、蕴涵、参数-Validity-Entailment-Arguments"><a href="#有效性、蕴涵、参数-Validity-Entailment-Arguments" class="headerlink" title="有效性、蕴涵、参数 Validity, Entailment, Arguments"></a>有效性、蕴涵、参数 Validity, Entailment, Arguments</h3><p>argument n.论点  </p><p>declarative sentences 陈述句</p><p>permises n.前提：包含一些论点的陈述句</p><p>conclusion n. 结论 </p><ul><li><p>The conclusion <em>logically follows</em> from the premises.</p></li><li><p>The conclusion is a <em>logical consequence</em> of the premises.</p></li><li><p>The premises <strong>entail</strong> the conclusion.</p></li></ul><p>propositional logic 命题逻辑 </p><p>formulae n.公式</p><p><strong>DEF</strong>： $\phi_1,\dots,\phi_n \vDash \phi $</p><h4 id="Applications-III-Reasoning-About-Requirements-Specififications"><a href="#Applications-III-Reasoning-About-Requirements-Specififications" class="headerlink" title="Applications III: Reasoning About Requirements/Specififications"></a><strong>Applications III:</strong> <strong>Reasoning About Requirements/Specififications</strong></h4><p>formalised vi. 使形式化，使正式</p><p>implementation n. 实施，履行</p><ul><li><p>The requirements cannot be implemented if  $\phi_1 \land \dots \land \phi_n$ is not satisfifiable.</p></li><li><p>if $\phi_1 , \dots , \phi_n \vDash \psi$ then every correct implementation of the requirements <em>R</em> will be such that <em>C</em> is always true in the resulting system.</p></li><li><p>If $\phi_1 , \dots , \phi_{n-1} \vDash \phi_n$, then the condition $\phi_n$ of the specifification is redundant and need not be stated in the specifification.</p></li></ul><h3 id="Validity-of-Formulas-公式的有效性"><a href="#Validity-of-Formulas-公式的有效性" class="headerlink" title="Validity of Formulas 公式的有效性"></a>Validity of Formulas 公式的有效性</h3><p><em>valid</em> a. 有效的，合理的</p><p><em>tautology</em> n.同意反复</p><p>detote vt. 表示</p><p><em>evaluate</em>  vt. 评价；估价</p><h3 id="Validity-Equivalence-and-Entailment-有效性，等价性和蕴含性"><a href="#Validity-Equivalence-and-Entailment-有效性，等价性和蕴含性" class="headerlink" title="Validity, Equivalence and Entailment 有效性，等价性和蕴含性"></a>Validity, Equivalence and Entailment 有效性，等价性和蕴含性</h3><h5 id="定理-Theorem"><a href="#定理-Theorem" class="headerlink" title="定理 Theorem"></a>定理 Theorem</h5><p>以下等价</p><ul><li><p>$\phi_1,\dots,\phi_n\vDash\psi$</p></li><li><p>$\vDash(\phi_1\land\dots\land\phi_n)\Rightarrow \psi$</p></li><li><p>$\vDash \phi_1 \Rightarrow (\phi_2\Rightarrow \dots (\phi_n \Rightarrow \psi )\dots)$</p></li><li><p>$\phi \equiv \psi \ \mbox{if and only if} \vDash \phi \Leftrightarrow \psi$</p></li></ul><h2 id="Proof-Roles-and-Methods-证明规则与方法"><a href="#Proof-Roles-and-Methods-证明规则与方法" class="headerlink" title="Proof Roles and Methods 证明规则与方法"></a>Proof Roles and Methods 证明规则与方法</h2><h3 id="Proof-Roles-and-Methods-Proof-by-Cases-按案例证明"><a href="#Proof-Roles-and-Methods-Proof-by-Cases-按案例证明" class="headerlink" title="Proof Roles and Methods: Proof by Cases 按案例证明"></a>Proof Roles and Methods: Proof by Cases 按案例证明</h3><p>To prove A, we have</p><ul><li><p>$B_1 \lor \dots \lor B_n$</p></li><li><p>$B_i \Rightarrow A \ \mbox{for each } i = 1 \dots n$</p></li></ul><p>$\forall$ means “for all”</p><p>$ \exists$ Means “there exist(s)”</p><p><strong>Goldbach’s conjecture</strong></p><p>$\forall n \in 2 \mathbb {N} ( n &gt; 2 \Rightarrow \exists p, q \in \mathbb {N} (p,q \in PRIMES \land n=p+1))$</p><p>tautology </p><h5 id="Exercise"><a href="#Exercise" class="headerlink" title="Exercise"></a>Exercise</h5><p>Which of the following is a tautology?</p><p>$\forall x(\exists y( P(x,y))) \Rightarrow \exists y(\forall x (P(x,y)))\color {Red} \times$</p><p>$ \exists y(\forall x (P(x,y))) \Rightarrow \forall x(\exists y( P(x,y))) \color {Green} \checkmark$</p><h3 id="Proof-of-the-Contrapositive-证明逆否命题"><a href="#Proof-of-the-Contrapositive-证明逆否命题" class="headerlink" title="Proof of the Contrapositive 证明逆否命题"></a>Proof of the Contrapositive 证明逆否命题</h3><p>We want to prove $ A \Rightarrow B$</p><p>To prove it , we show $ \lnot B \Rightarrow \lnot A$ and invoke the equivalence $(A \Rightarrow B) \equiv (\lnot B \Rightarrow \lnot A)$</p><p><em>irrational</em> adj. 不合理的；无理性的；荒谬的 n. [数] 无理数</p><p><strong>Example</strong></p><p>The square root of an irrational number is irrational:</p><p>$\forall x \in \mathbb {R}(x\notin \mathbb {Q} \Rightarrow \sqrt {x} \notin \mathbb {Q})$</p><p>To prove this, we can prove:</p><p>$\sqrt x \in \mathbb {Q} \Rightarrow x \ zai \mathbb {Q}$</p><p>$\sqrt x = \frac {p}{q} \ \mbox {for some } p,q \in \mathbb {Z} \\<br>\Rightarrow x = \frac {p^2}{q^2}$</p><h3 id="Proof-by-Contradiction-反证法"><a href="#Proof-by-Contradiction-反证法" class="headerlink" title="Proof by Contradiction 反证法"></a>Proof by Contradiction 反证法</h3><p><em>Contradiction</em> n. 矛盾；否认；反驳</p><p>We want to prove $A$. To prove it, we assume $\lnot A$ , and derive both $B$ and $\lnot B$ for some proposition $B$.</p><p>(Hard part: working out what $B$ should be.)</p><p><strong>Example</strong></p><ul><li><p>$\sqrt{2}$ is irrational</p></li><li><p>There exist an infinite number of primes</p></li></ul><p>$\sqrt{2}=\frac{p}{q}$</p><p>$\Rightarrow 2q^2 = p^2$</p><p>$\Rightarrow p^2 \mbox{ is even } \Rightarrow p \mbox{ is even } \Rightarrow p=2\cdot r$</p><p>$\Rightarrow 2q^2 = 4 r^2$</p><p>$\Rightarrow q^2 = 2 r^2$</p><p>$\Rightarrow q^2 \mbox{ is even } \Rightarrow q \mbox{ is even }$</p><p>but $p,q$ must relative prime, so there is a contradiction</p><h2 id="substitution-替换"><a href="#substitution-替换" class="headerlink" title="substitution 替换"></a>substitution 替换</h2><p><em>substitution</em> n. 代替；[数] 置换；代替物</p><p>Substitution is the process of replacing every occurrence of some symbol by an expression.</p><p>We can substitute logical expressions for logical variables.</p><p><em>tautology</em>  n. 同义反复</p><h3 id="Substitution-Rules"><a href="#Substitution-Rules" class="headerlink" title="Substitution Rules"></a>Substitution Rules</h3><p>(a) if $\vDash \phi(P)$ then $\vDash \phi ( \alpha)$</p><p>(b) if $\alpha \equiv \beta$ then $\phi(\alpha) \equiv \phi(\beta)$</p><h2 id="Boolean-Functions-布尔函数"><a href="#Boolean-Functions-布尔函数" class="headerlink" title="Boolean Functions 布尔函数"></a>Boolean Functions 布尔函数</h2><p><em>valuation</em> n. 评价，估价；计算</p><p>A Boolean function of one variable is also called <strong>unary(一元的)</strong>.</p><p>A function of two variables is called <strong>binary(二元的)</strong>.</p><p>A function of <em>n</em> input variables is called <strong>n-ary(n元的)</strong>.</p><h3 id="Boolean-Arithmetic"><a href="#Boolean-Arithmetic" class="headerlink" title="Boolean Arithmetic"></a>Boolean Arithmetic</h3><p>Consider truth values with operations $\land \lor \lnot $ <strong>algebraic structure</strong>:</p><p>$\mathbb{B}={0,1}$ with ‘Boolean’ arithmetic</p><p>$a\cdot b, a+b,a^\prime = 1-a$</p><ul><li>$pq$ is for $p \cdot q$</li><li>$\bar{p}$ is more common than $p^\prime$</li><li>$\bar{(\cdot )}$ obviates the need for some parentheses</li></ul><p><em>parenthese</em> n. 括号；圆括号</p><h4 id="Applications-IV-Digital-Circuits-应用四-数字电路"><a href="#Applications-IV-Digital-Circuits-应用四-数字电路" class="headerlink" title="Applications IV: Digital Circuits 应用四:数字电路"></a>Applications IV: Digital Circuits 应用四:数字电路</h4><p><img src="https://gitee.com/szdf123/hexoblog/raw/master/img/20210227170629.png" alt="image-20210227170629279"></p><h3 id="Definition-Boolean-Algebra-布尔代数的定义"><a href="#Definition-Boolean-Algebra-布尔代数的定义" class="headerlink" title="Definition Boolean Algebra 布尔代数的定义"></a>Definition Boolean Algebra 布尔代数的定义</h3><p><strong>commutative:</strong> $ x + y = y + x$</p><p>$ x \cdot y = y \cdot x$</p><p><strong>associative:</strong> $(x + y) + z = x + (y + z)$ </p><p>$(x \cdot y) \cdot z = x \cdot ( y\cdot z)$</p><p><strong>distributive:</strong> $x + (y\cdot z)=(x+y)\cdot (x+z)$</p><p>$x \cdot (y+x) = (x\cdot y) + (x \cdot z)$</p><p><strong>identity:</strong> $x + 0 = x, \ x \cdot 1 = x$</p><p><strong>complementation:</strong> $x + x^\prime = 1, \ x\cdot x^\prime =0$</p><p>2-bit vectors $\mathbb{B}^2$:</p><script type="math/tex; mode=display">0 \overset {def}{=}(0,0) \\1 \overset {def}{=}(1,1) \\\mbox{join: } (a_1,a_2)+(b_1,b_2) \mapsto (a_1 = b_1, a_2 + b_2) \\\mbox{join: } (a_1,a_2)\cdot(b_1,b_2) \mapsto (a_1 \cdot b_1, a_2 \cdot b_2) \\\mbox{complementation: } (a_1,a_2)^\prime \mapsto(a_1^\prime,a_2^\prime)</script><p>$T={(0,0),(0,1),(1,0),(1,1)}$</p><h4 id="Boolean-Expressions"><a href="#Boolean-Expressions" class="headerlink" title="Boolean Expressions"></a>Boolean Expressions</h4><div class="table-container"><table><thead><tr><th></th><th>PL</th><th>BA(Boolean algebra)</th></tr></thead><tbody><tr><td>propositional atoms</td><td>$p,q,\dots$</td><td>$p,q,\dots$</td></tr><tr><td>conjunction</td><td>$p\land q$</td><td>$p\cdot q$ or $pq$</td></tr><tr><td>disjunction</td><td>$p\lor q$</td><td>$p + q$</td></tr><tr><td>negation</td><td>$\lnot p$</td><td>$p^\prime$</td></tr></tbody></table></div><h3 id="Terminology-and-Rules-术语和规则"><a href="#Terminology-and-Rules-术语和规则" class="headerlink" title="Terminology and Rules 术语和规则"></a>Terminology and Rules 术语和规则</h3><ul><li><p>a <strong>literal</strong> is an expression $p$ or $p^\prime$, where $p$ is a propositonal atom</p></li><li><p>An expression is in <strong>CNF</strong> (conjunctive normal form,合取范式) is it has the form</p><script type="math/tex; mode=display">\prod_{i} C_i</script></li></ul><p>where each <strong>clause</strong> $C_i$ is a disjunction of literals e.g. $p+q+r^\prime$. </p><ul><li>An expression is in <strong>DNF</strong> (disjunctive normal form, 析取范式) if it has the form <script type="math/tex; mode=display">\sum_{i}C_i</script></li></ul><p>where each clause $C_i$ is a conjunction of literals e.g. $pqr^\prime$</p><ul><li><p>CNF and DNF are named after their top level operators; no deeper nesting of $\cdot$  or $+$ is permitted.</p></li><li><p>any given variable appears only once in one clause</p></li></ul><script type="math/tex; mode=display">x + x =x,\ xx=x \\xx^\prime = 0,\ x + x^\prime = 1 \\x \cdot 0 = 0,\ x \cdot 1 = x,\ x + 0 = x,\ x +1 =1</script><ul><li>DNF perferred, as well as few terms </li></ul><script type="math/tex; mode=display">\begin{array}xx + xy & = x \quad \mbox{(absorption)} \\xy + xy^\prime & = x \quad \mbox{(combining the opposites)}\end{array}</script><ul><li>every Boolean expression $\phi$  has an equivalent expression in CNF or DNF</li><li><strong>De morgan’s laws</strong></li></ul><script type="math/tex; mode=display">(x+y)^\prime = x^\prime \cdot y^\prime \\(x \cdot y )^\prime = x^\prime + y^\prime \\(x^\prime)^\prime = x</script><h3 id="Canonical-Form-DNF-规范形式DNF"><a href="#Canonical-Form-DNF-规范形式DNF" class="headerlink" title="Canonical Form DNF 规范形式DNF"></a>Canonical Form DNF 规范形式DNF</h3><script type="math/tex; mode=display">\mathcal{l}=\begin{cases} X_i \quad if\ \pi(x_i)=1 \\x_i^\prime \quad if \ \pi(x_i)=0\end{cases} \\\mbox{product}\ t_\pi = \mathcal{l}_1\cdot\mathcal{l}_2\cdot \ \dots \ \cdot \mathcal{l}_n</script><p><strong>Example</strong></p><p>If $\pi(x_1)=1 $ and $\pi(x_2)=0$ , then $t_\pi=x_1\cdot x_2^\prime$</p><p>The <strong>canonical DNF</strong> of $E$ is</p><script type="math/tex; mode=display">E^{dnf}=\sum_{E(\pi)=1}t_\pi</script><p><strong>Example</strong></p><p>if E is defined by</p><div class="table-container"><table><thead><tr><th>x</th><th>y</th><th>E</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>1</td></tr><tr><td>0</td><td>1</td><td>0</td></tr><tr><td>1</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>1</td></tr></tbody></table></div><p>Then $E^{dnf} = {x}’{y}’+x{y}’+xy$</p><p>it can be simplified to  $x+{y}’$</p><h3 id="Karnaugh-Maps-卡诺图"><a href="#Karnaugh-Maps-卡诺图" class="headerlink" title="Karnaugh Maps 卡诺图"></a>Karnaugh Maps 卡诺图</h3><ul><li><p>The rectangles can go ‘around the corner’/the actual map should be seen as a <em>torus</em>.</p></li><li><p>Rectangles must have sides of 1, 2 or 4 squares (three adjacent cells are useless).</p></li></ul><p><img src="https://gitee.com/szdf123/hexoblog/raw/master/img/20210227223730.png" alt="K Maps计算过程图" style="zoom: 33%;"></p><p><img src="https://gitee.com/szdf123/hexoblog/raw/master/img/20210228135344.jpg" alt="使用卡诺图计算CNF及DNF方法"></p><p><em>本图由freakyuito整理</em></p>]]></content>
      
      
      <categories>
          
          <category> UNSW </category>
          
      </categories>
      
      
        <tags>
            
            <tag> COMP9020 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 课程 </tag>
            
            <tag> 离散数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX 符号命令大全</title>
      <link href="2021/02/24/latex-fu-hao-ming-ling-da-quan/"/>
      <url>2021/02/24/latex-fu-hao-ming-ling-da-quan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文引用改编自：</p><p><a href="http://blog.sina.com.cn/s/blog_bad174440102z1t7.html">http://blog.sina.com.cn/s/blog_bad174440102z1t7.html</a></p><p><a href="https://www.cnblogs.com/yalphait/articles/8685586.html">https://www.cnblogs.com/yalphait/articles/8685586.html</a></p></blockquote><h2 id="函数、符号及特殊字符"><a href="#函数、符号及特殊字符" class="headerlink" title="函数、符号及特殊字符"></a>函数、符号及特殊字符</h2><h3 id="声调"><a href="#声调" class="headerlink" title="声调"></a>声调</h3><div class="table-container"><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\bar{x}</td><td>$\bar{x}$</td><td>\acute{\eta}</td><td>$\acute{\eta}$</td><td>\check{\alpha}</td><td>$\check{\alpha}$</td></tr><tr><td>\grave{\eta}</td><td>$\grave{\eta}$</td><td>\breve{a}</td><td>$\breve{a}$</td><td>\ddot{y}</td><td>$\ddot{y}$</td></tr><tr><td>\dot{x}</td><td>$\dot{x}$</td><td>\hat{\alpha}</td><td>$\hat{\alpha}$</td><td>\tilde{\iota}</td><td>$\tilde{\iota}$</td></tr></tbody></table></div><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><div class="table-container"><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\sin\theta</td><td>$\sin\theta$</td><td>\cos\theta</td><td>$\cos\theta$</td><td>$\tan\theta$</td><td>$\tan\theta$</td></tr><tr><td>\arcsin\frac{L}{r}</td><td>$\arcsin\frac{L}{r}$</td><td>\arccos\frac{T}{r}</td><td>$\arccos\frac{T}{r}$</td><td>$\arctan\frac{L}{T}$</td><td>$\arctan\frac{L}{T}$</td></tr><tr><td>\sinh g</td><td>$\sinh g$</td><td>\cosh h</td><td>$\cosh h$</td><td>$\tanh i$</td><td>\tanh i</td></tr><tr><td>\operatorname{sh}j</td><td>$\operatorname{sh}j$</td><td>\operatorname{argsh}k</td><td>$\operatorname{argsh}k$</td><td>\operatorname{ch}h</td><td>$\operatorname{ch}h$</td></tr><tr><td>\operatorname{argch}l</td><td>$\operatorname{argch}l$</td><td>\operatorname{th}i</td><td>$\operatorname{th}i$</td><td>\operatorname{argth}m</td><td>$\operatorname{argth}m$</td></tr><tr><td>k’(x)=\lim_{\Delta x\to 0}\frac{k(x)-k(x-\Delta x)}{\Deltax}</td><td>k’(x)=$m_{\Delta x\to 0}\frac{k(x)-k(x-\Delta x)}{\Deltax}$</td><td>\limsup S</td><td>$\limsup S$</td><td>\liminf I</td><td>$\liminf I$</td></tr><tr><td>\max H</td><td>$\max H$</td><td>\min L</td><td>$\min L$</td><td>\inf s</td><td>$\inf s$</td></tr><tr><td>\sup t</td><td>$\sup t$</td><td>\exp!t</td><td>$\exp!t$</td><td>\ln X</td><td>$\ln X$</td></tr><tr><td>\lg X</td><td>$\lg X$</td><td>\log X</td><td>$\log X$</td><td>\log_\alpha X</td><td>$\log_\alpha X$</td></tr><tr><td>\ker x</td><td>$\ker x$</td><td>\deg x</td><td>$\deg x$</td><td>\gcd(T,U,V,W,X)</td><td>$\gcd(T,U,V,W,X)$</td></tr><tr><td>\Pr x</td><td>$\Pr x$</td><td>\det x</td><td>$\det x$</td><td>\hom x</td><td>$\hom x$</td></tr><tr><td>\arg x</td><td>$\arg x$</td><td>\dim x</td><td>$\dim x$</td><td>\lim_{t\to n}T</td><td>$\lim_{t\to n}T$</td></tr></tbody></table></div><h3 id="同余"><a href="#同余" class="headerlink" title="同余"></a>同余</h3><div class="table-container"><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\pmod{m}</td><td>$\pmod{m}$</td><td>a \bmod b</td><td>$a \bmod b$</td></tr></tbody></table></div><h3 id="微分"><a href="#微分" class="headerlink" title="微分"></a>微分</h3><div class="table-container"><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\nabla</td><td>$\nabla$</td><td>\partial x</td><td>$\partial x$</td><td>\mathrm{d}x</td><td>$\mathrm{d}x$</td></tr><tr><td>\dot x</td><td>$\dot x$</td><td>\ddot y</td><td>$\ddot y$</td><td></td></tr></tbody></table></div><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><div class="table-container"><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\forall</td><td>$\forall$</td><td>\exists</td><td>$\exists$</td><td>\empty</td><td>$\empty$</td><td>\emptyset</td><td>$\emptyset$</td><td>\varnothing</td><td>$\varnothing$</td></tr><tr><td>\in</td><td>$\in$</td><td>\ni</td><td>$\ni$</td><td>\not\in</td><td>$\not\in$</td><td>\notin</td><td>$\notin$</td><td>\subset</td><td>$\subset$</td></tr><tr><td>\subseteq</td><td>$\subseteq$</td><td>\supset</td><td>$\supset$</td><td>\supseteq</td><td>$\supseteq$</td><td>\cap</td><td>$\cap$</td><td>\bigcap</td><td>$\bigcap$</td></tr><tr><td>\cup</td><td>$\cup$</td><td>\bigcup</td><td>$\bigcup$</td><td>\biguplus</td><td>$\biguplus$</td><td>\sqsubset</td><td>$\sqsubset$</td><td>\sqsubseteq</td><td>$\sqsubseteq$</td></tr><tr><td>\sqsupset</td><td>$\sqsupset$</td><td>\sqsupseteq</td><td>$\sqsupseteq$</td><td>\sqcap</td><td>$\sqcap$</td><td>\sqcup</td><td>$\sqcup$</td><td>\bigsqcup</td><td>$\bigsqcup$</td></tr></tbody></table></div><h3 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h3><div class="table-container"><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>p</td><td>$P$</td><td>\land</td><td>$\land$</td><td>\wedge</td><td>$\wedge$</td><td>\bigwedge</td><td>$\bigwedge$</td></tr><tr><td>\bar{q} \to p</td><td>$\bar{q} \to p$</td><td>\lor</td><td>$\lor$</td><td>\vee</td><td>$\vee$</td><td>\bigvee</td><td>$\bigvee$</td></tr><tr><td>\lnot</td><td>$\lnot$</td><td>\neg q</td><td>$\neg q$</td><td>\setminus</td><td>$\setminus$</td><td>\smallsetminus</td><td>$\smallsetminus$</td></tr></tbody></table></div><h3 id="根号"><a href="#根号" class="headerlink" title="根号"></a>根号</h3><div class="table-container"><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\sqrt{3}</td><td>$\sqrt{3}$</td><td>\sqrt[n]{3}</td><td>$\sqrt[n]{3}$</td></tr></tbody></table></div><h3 id="关系符号"><a href="#关系符号" class="headerlink" title="关系符号"></a>关系符号</h3><div class="table-container"><table><thead><tr><th>语法</th><th>效果</th></tr></thead><tbody><tr><td><code>\Delta ABC\sim\Delta XYZ</code></td><td>$1 $</td></tr><tr><td><code>\sqrt{3}\approx1.732050808\ldots</code></td><td>$1$</td></tr><tr><td>\simeq</td><td>$\simeq$</td></tr><tr><td>\cong</td><td>$\cong$</td></tr><tr><td>\dot=</td><td>$\dot=$</td></tr><tr><td><code>\ggg</code></td><td>$1$</td></tr><tr><td><code>\gg</code></td><td>$1$</td></tr><tr><td><code>&gt;</code></td><td>$1$</td></tr><tr><td><code>\ge</code></td><td>$1$</td></tr><tr><td><code>\geqq</code></td><td>$1$</td></tr><tr><td><code>=</code></td><td>$1$</td></tr><tr><td><code>\leq</code></td><td>$1$</td></tr><tr><td><code>\leqq</code></td><td>$1$</td></tr><tr><td><code>&lt;</code></td><td>$1$</td></tr><tr><td><code>\ll</code></td><td>$1$</td></tr><tr><td><code>\lll</code></td><td>$1$</td></tr><tr><td><code>(x-y)^2\equiv(-x+y)^2\equiv x^2-2xy+y^2</code></td><td>$1$</td></tr><tr><td><code>\begin{align}``\because\begin{cases}``\acute{a}x^2+bx^2+c\gtrless0\gtrless\grave{a}x^2+bx^2+c\\``\acute{a}&gt;0&gt;\grave{a}``\end{cases}\\``\therefore\frac{-b\pm\sqrt{b^2-4\acute{a}c}}{2\acute{a}}{}_\lessgtr^\gtrlessx_\lessgtr^\gtrless\frac{-b\pm\sqrt{b^2-4\grave{a}c}}{2\grave{a}}``\end{align}</code></td><td>$1$</td></tr><tr><td>x\not\equiv N</td><td>$x\not\equiv N$</td></tr><tr><td>x\ne A</td><td>$x\ne A$</td></tr><tr><td>x\neq C</td><td>$x\neq C$</td></tr><tr><td>t\propto v</td><td>$t\propto v$</td></tr><tr><td>\pm</td><td>$\pm$</td></tr><tr><td>\mp</td><td>$\mp$</td></tr></tbody></table></div><h3 id="几何符号"><a href="#几何符号" class="headerlink" title="几何符号"></a>几何符号</h3><div class="table-container"><table><thead><tr><th>特征</th><th>语法</th><th>效果</th><th></th></tr></thead><tbody><tr><td>菱形</td><td>\Diamond</td><td>$\Diamond$</td><td></td></tr><tr><td>正方形</td><td>\Box</td><td>$\Box$</td><td></td></tr><tr><td>三角形 Delta</td><td><code>\Delta</code></td><td>$\Delta$</td></tr><tr><td>三角形 图型</td><td><code>\triangle</code></td><td>$\triangle$</td><td></td></tr><tr><td>角名</td><td><code>\angle\Alpha\Beta\Gamma</code></td><td>$\angle\Alpha\Beta\Gamma$</td><td></td></tr><tr><td>角度</td><td><code>\sin\!\frac{\pi}{3}=\sin60^\operatorname{\omicron}=\frac{\sqrt{3}}{2}</code></td><td>$\sin!\frac{\pi}{3}=\sin60^\operatorname{\omicron}=\frac{\sqrt{3}}{2}$</td><td></td></tr><tr><td>垂直</td><td>\perp</td><td>$\perp$</td></tr></tbody></table></div><h3 id="箭头符号"><a href="#箭头符号" class="headerlink" title="箭头符号"></a>箭头符号</h3><div class="table-container"><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\leftarrow</td><td>$\leftarrow$</td><td>\gets</td><td>$\gets$</td><td>\rightarrow</td><td>$\rightarrow$</td></tr><tr><td>\to</td><td>$\to$</td><td>\leftrightarrow</td><td>$\leftrightarrow$</td><td>\longleftarrow</td><td>$\longleftarrow$</td></tr><tr><td>\longrightarrow</td><td>$\longrightarrow$</td><td>\mapsto</td><td>$\mapsto$</td><td>\longmapsto</td><td>$\longmapsto$</td></tr><tr><td>\hookrightarrow</td><td>$\hookrightarrow$</td><td>\hookleftarrow</td><td>$\hookleftarrow$</td><td>\nearrow</td><td>$\nearrow$</td></tr><tr><td>\searrow</td><td>$\searrow$</td><td>\swarrow</td><td>$\swarrow$</td><td>\nwarrow</td><td>$\nwarrow$</td></tr><tr><td>\uparrow</td><td>$\uparrow $</td><td>\downarrow</td><td>$\downarrow$</td><td>\updownarrow</td><td>$\updownarrow$</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\rightharpoonup</td><td>$\rightharpoonup $</td><td>\rightharpoondown</td><td>$\rightharpoondown$</td><td>\leftharpoonup</td><td>$\leftharpoonup$</td><td>\leftharpoondown</td><td>$\leftharpoondown$</td></tr><tr><td>\upharpoonleft</td><td>$\upharpoonleft$</td><td>\upharpoonright</td><td>$\upharpoonright$</td><td>\downharpoonleft</td><td>$\downharpoonleft$</td><td>\downharpoonright</td><td>$\downharpoonright$</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\Leftarrow</td><td>$\Leftarrow$</td><td>\Rightarrow</td><td>$\Rightarrow$</td><td>\Leftrightarrow</td><td>$\Leftrightarrow$</td></tr><tr><td>\Longleftarrow</td><td>$\Longleftarrow$</td><td>\Longrightarrow</td><td>$\Longrightarrow$</td><td>\Longleftrightarrow (or \iff)</td><td>$\Longleftrightarrow (or \iff)$</td></tr><tr><td>\Uparrow</td><td>$\Uparrow$</td><td>\Downarrow</td><td>$\Downarrow$</td><td>\Updownarrow</td><td>$\Updownarrow$</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 实用工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客配置及图片引用方法</title>
      <link href="2021/02/24/bo-ke-pei-zhi-ji-tu-pian-yin-yong-fang-fa/"/>
      <url>2021/02/24/bo-ke-pei-zhi-ji-tu-pian-yin-yong-fang-fa/</url>
      
        <content type="html"><![CDATA[<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><blockquote><p>content</p><footer><strong>[author[</strong><cite>source]] [link] [source_link_title]</cite></footer></blockquote><h5 id="普通的-blockquote"><a href="#普通的-blockquote" class="headerlink" title="普通的 blockquote"></a>普通的 blockquote</h5><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p></blockquote><h5 id="引用书上的句子"><a href="#引用书上的句子" class="headerlink" title="引用书上的句子"></a>引用书上的句子</h5><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote><h5 id="引用-Twitter"><a href="#引用-Twitter" class="headerlink" title="引用 Twitter"></a>引用 Twitter</h5><blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io">http://devdocs.io</a></p><footer><strong>@DevDocs</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote><h5 id="引用网络上的文章"><a href="#引用网络上的文章" class="headerlink" title="引用网络上的文章"></a>引用网络上的文章</h5><blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html">Welcome to Island Marketing</a></cite></footer></blockquote><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><pre class="line-numbers language-none"><code class="language-none">{% codeblock [title] [lang:language] [url] [link text] [additional options] %}code snippet{% endcodeblock %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="普通的代码块"><a href="#普通的代码块" class="headerlink" title="普通的代码块"></a>普通的代码块</h5><pre class="line-numbers language-none"><code class="language-none">alert("Hello World!");<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="指定语言"><a href="#指定语言" class="headerlink" title="指定语言"></a>指定语言</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"This is my python code!"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="附加说明"><a href="#附加说明" class="headerlink" title="附加说明"></a>附加说明</h5><pre class="line-numbers language-none"><div class="caption"><span>Array.map</span></div><code class="language-none">array.map(callback[, thisArg])<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="附加说明和网址"><a href="#附加说明和网址" class="headerlink" title="附加说明和网址"></a>附加说明和网址</h5><pre class="line-numbers language-none"><div class="caption"><span>_.compact</span><a href="http://underscorejs.org/#compact">Underscore.js</a></div><code class="language-none">_.compact([0, 1, false, 2, '', 3]);=&gt; [1, 2, 3]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-Java" data-language="Java"><code class="language-Java">println("This is my Java code!");<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h4><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">matery-github</a></p>]]></content>
      
      
      <categories>
          
          <category> 实用工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 教程 </tag>
            
            <tag> Java </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>COMP9020课程笔记（Week1）</title>
      <link href="2021/02/20/comp9020-ke-cheng-bi-ji-week1/"/>
      <url>2021/02/20/comp9020-ke-cheng-bi-ji-week1/</url>
      
        <content type="html"><![CDATA[<h2 id="Week-1"><a href="#Week-1" class="headerlink" title="Week 1"></a>Week 1</h2><p>一般地，以下表达式成立：</p><p>$|B| &lt; | Pow(B)| \\ A \cap B \in Pow(B)$</p><p>注意，一般以下表达式不成立：</p><p> $A \subseteq Pow(A)$</p><h4 id="Week-1-小结"><a href="#Week-1-小结" class="headerlink" title="Week 1 小结"></a>Week 1 小结</h4><h5 id="数字符号-notation-for-numbers"><a href="#数字符号-notation-for-numbers" class="headerlink" title="数字符号 notation for numbers"></a>数字符号 notation for numbers</h5><p>$\lfloor m \rfloor , \lceil m \rceil , m | n , n\mod m, |a|, [a, b], (a,b),gcd,lcn$</p><h5 id="集合操作符-Sets-and-set-operations"><a href="#集合操作符-Sets-and-set-operations" class="headerlink" title="集合操作符 Sets and set operations"></a>集合操作符 Sets and set operations</h5><p> $|A|,\in , \cup , \cap , \setminus , \oplus , A^c , Pow(A) , \subseteq , \subset , \times$</p><h5 id="正式语言-字母和文字-Formal-languages-alphabets-and-words"><a href="#正式语言-字母和文字-Formal-languages-alphabets-and-words" class="headerlink" title="正式语言:字母和文字 Formal languages: alphabets and words"></a>正式语言:字母和文字 Formal languages: alphabets and words</h5><p>$\lambda , \sum ^*, \sum ^+, \sum ^1, \sum ^2, \dots ,\sum ^{\leq k}$</p><h5 id="命题逻辑的语言-Language-of-propositional-logic"><a href="#命题逻辑的语言-Language-of-propositional-logic" class="headerlink" title="命题逻辑的语言 Language of propositional logic"></a>命题逻辑的语言 Language of propositional logic</h5><p>$\land , \lor , \lnot , \Rightarrow , \Leftrightarrow , \top , \bot , \mbox {truth tables}$</p><p>一般情况下，$(A\backslash B\backslash C)\neq A\backslash(B\backslash C)$，当 $A \cap C = \emptyset$时等式成立</p>]]></content>
      
      
      <categories>
          
          <category> UNSW </category>
          
      </categories>
      
      
        <tags>
            
            <tag> COMP9020 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 课程 </tag>
            
            <tag> 离散数学 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
